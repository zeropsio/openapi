components:
  examples:
    ErrorbackupUnsupportedStackType:
      value:
        Code: backupUnsupportedStackType
        Message: Backups are not supported for this stack type.
    ErrorbadOrExpiredActivationLink:
      value:
        Code: badOrExpiredActivationLink
        Message: Bad or expired activation link.
    ErrorclientUserAlreadyBeenDeleted:
      value:
        Code: clientUserAlreadyBeenDeleted
        Message: Client user already being deleted.
    ErrorclientUserConnectionNotFound:
      value:
        Code: clientUserConnectionNotFound
        Message: Client user connection not found.
    ErrordownloadTokenInvalidOrExpired:
      value:
        Code: downloadTokenInvalidOrExpired
        Message: Download token invalid or expired
    ErroremailExists:
      value:
        Code: emailExists
        Message: Email already exists.
    ErrorgithubAuthorizationRequired:
      value:
        Code: githubAuthorizationRequired
        Message: Github authorization required
    ErrorgithubRequestFailed:
      value:
        Code: githubRequestFailed
        Message: Github request failed
    ErrorgithubVerificationExpired:
      value:
        Code: githubVerificationExpired
        Message: Github verification code expired
    ErrorgitlabAuthorizationRequired:
      value:
        Code: gitlabAuthorizationRequired
        Message: Gitlab authorization required
    ErrorgitlabRequestFailed:
      value:
        Code: gitlabRequestFailed
        Message: Gitlab request failed
    ErrorgitlabVerificationExpired:
      value:
        Code: gitlabVerificationExpired
        Message: Gitlab verification code expired
    ErrorinsufficientPrivileges:
      value:
        Code: insufficientPrivileges
        Message: Insufficient privileges
    ErrorinternalServerError:
      value:
        Code: internalServerError
        Message: Internal server error.
    ErrorinvalidClientUserGroupCombination:
      value:
        Code: invalidClientUserGroupCombination
        Message: Invalid client and user group combination.
    ErrorinvalidGithubTokenAction:
      value:
        Code: invalidGithubTokenAction
        Message: Invalid Github token action
    ErrorinvalidGitlabTokenAction:
      value:
        Code: invalidGitlabTokenAction
        Message: Invalid Github token action
    ErrorinvalidOldPassword:
      value:
        Code: invalidOldPassword
        Message: Invalid old password
    ErrorinvalidPhoneNumber:
      value:
        Code: invalidPhoneNumber
        Message: Invalid phone number.
    ErrorinvalidUserRole:
      value:
        Code: invalidUserRole
        Message: Invalid user role
    ErrorinvoiceNotFound:
      value:
        Code: invoiceNotFound
        Message: Invoice not found
    ErrorisNotPossibleToEditAnotherUser:
      value:
        Code: isNotPossibleToEditAnotherUser
        Message: Is not possible to edit another user.
    ErrorlanguageNotFound:
      value:
        Code: languageNotFound
        Message: Language not found.
    ErrormaximumNumberOfClientExceeded:
      value:
        Code: maximumNumberOfClientExceeded
        Message: Exceeded the maximum number of users on the client (50)
    ErrornoAccessToZerops:
      value:
        Code: noAccessToZerops
        Message: User has no active access to Zerops.
    ErrornoActiveConnectionToAnyClient:
      value:
        Code: noActiveConnectionToAnyClient
        Message: User has no active connection to any client
    ErrornotAuthorized:
      value:
        Code: notAuthorized
        Message: Not authorized
    ErrorpasswordTooLong:
      value:
        Code: passwordTooLong
        Message: Password too long. Maximal length is {int:maxLength}.
    ErrorpasswordTooShort:
      value:
        Code: passwordTooShort
        Message: Password too short. Minimal length is {int:minLength}.
    ErrorprocessIsAlreadyOver:
      value:
        Code: processIsAlreadyOver
        Message: This process is already over.
    ErrorprocessIsAlreadyRunning:
      value:
        Code: processIsAlreadyRunning
        Message: This process is already running.
    ErrorrecordNotFound:
      value:
        Code: recordNotFound
        Message: Record not found
    ErrorrefreshTokenInvalid:
      value:
        Code: refreshTokenInvalid
        Message: Refresh token invalid or expired
    ErrortokenExpired:
      value:
        Code: tokenExpired
        Message: Your temporary token has expired
    ErrorunableToDeleteYourOwnAccount:
      value:
        Code: unableToDeleteYourOwnAccount
        Message: Unable to delete your own account.
    ErrorunableToEditDeletedUser:
      value:
        Code: unableToEditDeletedUser
        Message: Unable to edit deleted user.
    ErroruserAccountNotFound:
      value:
        Code: userAccountNotFound
        Message: User account not found
    ErroruserAlreadyConnectedToCompany:
      value:
        Code: userAlreadyConnectedToCompany
        Message: User with same email is already connected to this company
    ErroruserDataNotFound:
      value:
        Code: userDataNotFound
        Message: UserData not found.
    ErroruserIsNotInBeingDeletedStatus:
      value:
        Code: userIsNotInBeingDeletedStatus
        Message: User is not in BEING DELETED status.
    ErroruserNotFound:
      value:
        Code: userNotFound
        Message: User not found.
  parameters:
    Sync:
      in: header
      name: Sync
      schema:
        nullable: true
        type: boolean
    XGitHubEvent:
      in: header
      name: XGitHubEvent
      required: true
      schema:
        type: string
    XGitlabEvent:
      in: header
      name: XGitlabEvent
      required: true
      schema:
        type: string
    XGitlabToken:
      in: header
      name: XGitlabToken
      required: true
      schema:
        type: string
    XHubSignature:
      in: header
      name: XHubSignature
      required: true
      schema:
        type: string
    action:
      in: query
      name: action
      required: true
      schema:
        enum:
        - REGISTRATION
        - LOGIN
        - REPOSITORY
        type: string
    base64PublicKey:
      in: path
      name: base64PublicKey
      required: true
      schema:
        type: string
    date:
      in: path
      name: date
      required: true
      schema:
        pattern: ^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
        type: string
    email:
      in: query
      name: email
      schema:
        nullable: true
        type: string
    haRecipe:
      in: query
      name: haRecipe
      schema:
        nullable: true
        type: string
    id:
      in: path
      name: id
      required: true
      schema:
        format: UUIDShort
        pattern: ^[a-zA-Z0-9]{22}$
        type: string
    languageId:
      in: query
      name: languageId
      required: true
      schema:
        format: id
        type: string
    name:
      description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární výraz
        [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV NOT
        IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION 400;\n\t\t\tstop;\n\t\tendif;"
      example: server1
      in: path
      name: name
      required: true
      schema:
        description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
          výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
          NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
          400;\n\t\t\tstop;\n\t\tendif;"
        example: server1
        type: string
    nonHaRecipe:
      in: query
      name: nonHaRecipe
      schema:
        nullable: true
        type: string
    preview:
      in: query
      name: preview
      schema:
        nullable: true
        type: boolean
    projectId:
      description: = instance.id in Zerops Infrastructure
      in: path
      name: projectId
      required: true
      schema:
        description: = instance.id in Zerops Infrastructure
        format: UUIDShort
        pattern: ^[a-zA-Z0-9]{22}$
        type: string
    redirectUrl:
      in: query
      name: redirectUrl
      required: true
      schema:
        type: string
    repositoryFullName:
      in: query
      name: repositoryFullName
      required: true
      schema:
        type: string
    serviceStackTypeVersionId:
      in: path
      name: serviceStackTypeVersionId
      required: true
      schema:
        format: id
        type: string
    token:
      in: path
      name: token
      required: true
      schema:
        format: UUIDShort
        pattern: ^[a-zA-Z0-9]{22}$
        type: string
  responses:
    default:
      description: ""
  schemas:
    Addon:
      properties:
        addonName:
          type: string
        metricId:
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        unitPrice:
          format: float
          type: number
        userEnabled:
          type: boolean
        validFrom:
          format: date-time
          type: string
        validTill:
          format: date-time
          type: string
      required:
      - addonName
      - metricId
      - userEnabled
      - validFrom
      - validTill
      - unitPrice
      type: object
    AppVersionBuild:
      properties:
        cacheSnapshotId:
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        containerCreationStart:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        pipelineFailed:
          format: date-time
          nullable: true
          type: string
        pipelineFinish:
          format: date-time
          nullable: true
          type: string
        pipelineStart:
          format: date-time
          nullable: true
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackName:
          nullable: true
          type: string
        serviceStackTypeVersionId:
          format: id
          nullable: true
          type: string
        startDate:
          format: date-time
          nullable: true
          type: string
      type: object
    AppVersionGithubIntegration:
      properties:
        branchName:
          nullable: true
          type: string
        commit:
          type: string
        eventType:
          enum:
          - BRANCH
          - TAG
          type: string
        pusher:
          type: string
        repositoryFullName:
          type: string
        tagName:
          nullable: true
          type: string
        tagRegex:
          nullable: true
          type: string
      required:
      - eventType
      - pusher
      - commit
      - repositoryFullName
      type: object
    AppVersionGitlabIntegration:
      properties:
        branchName:
          nullable: true
          type: string
        commit:
          type: string
        eventType:
          enum:
          - BRANCH
          - TAG
          type: string
        pusher:
          type: string
        repositoryFullName:
          type: string
        tagName:
          nullable: true
          type: string
        tagRegex:
          nullable: true
          type: string
      required:
      - eventType
      - pusher
      - commit
      - repositoryFullName
      type: object
    AppVersionJsonObject:
      properties:
        activationDate:
          format: date-time
          nullable: true
          type: string
        base:
          nullable: true
          type: string
        build:
          $ref: '#/components/schemas/AppVersionBuild'
        configContent:
          format: text
          nullable: true
          type: string
        created:
          format: date-time
          nullable: true
          type: string
        createdByUser:
          $ref: '#/components/schemas/UserJsonObject'
        githubIntegration:
          $ref: '#/components/schemas/AppVersionGithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/AppVersionGitlabIntegration'
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        name:
          nullable: true
          type: string
        os:
          nullable: true
          type: string
        prepareCustomRuntime:
          $ref: '#/components/schemas/PrepareCustomRuntime'
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        publicGitSource:
          $ref: '#/components/schemas/AppVersionPublicGitSource'
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        source:
          default: CLI
          enum:
          - CLI
          - GUI
          - GITHUB
          - GITLAB
          - GIT
          - NONE
          type: string
        status:
          default: UPLOADING
          enum:
          - UPLOADING
          - WAITING_TO_DEPLOY
          - DEPLOYING
          - DEPLOY_FAILED
          - ACTIVE
          - BACKUP
          - BUILDING
          - WAITING_TO_BUILD
          - BUILD_FAILED
          - PREPARING_RUNTIME
          - PREPARING_RUNTIME_FAILED
          - BUILD_VALIDATION_FAILED
          - CANCELLED
          nullable: true
          type: string
        zeropsYamlJson:
          format: text
          nullable: true
          type: string
      required:
      - id
      - sequence
      type: object
    AppVersionLight:
      properties:
        base:
          nullable: true
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        os:
          nullable: true
          type: string
        status:
          default: UPLOADING
          enum:
          - UPLOADING
          - WAITING_TO_DEPLOY
          - DEPLOYING
          - DEPLOY_FAILED
          - ACTIVE
          - BACKUP
          - BUILDING
          - WAITING_TO_BUILD
          - BUILD_FAILED
          - PREPARING_RUNTIME
          - PREPARING_RUNTIME_FAILED
          - BUILD_VALIDATION_FAILED
          - CANCELLED
          type: string
      required:
      - id
      - created
      - lastUpdate
      type: object
    AppVersionPublicGitSource:
      properties:
        branchName:
          type: string
        configContentFromImport:
          type: boolean
        explicitSetup:
          nullable: true
          type: boolean
        gitUrl:
          format: uri
          type: string
      required:
      - gitUrl
      - branchName
      - configContentFromImport
      type: object
    AppVersionUserData:
      properties:
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        type:
          default: SECRET
          description: Odfiltrovat záznamy userData.type == INTERNAL na výstupu /search
          enum:
          - READ_ONLY
          - EDITABLE
          - SECRET
          - INTERNAL
          - ENV
          type: string
      required:
      - key
      - content
      type: object
    Auth:
      properties:
        accessToken:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        author:
          $ref: '#/components/schemas/Author'
        expiresAt:
          format: date-time
          type: string
        expiresIn:
          format: int
          type: integer
        refreshToken:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        tokenType:
          type: string
        userId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - accessToken
      - tokenType
      - expiresIn
      - expiresAt
      - refreshToken
      - userId
      - author
      type: object
    Author:
      properties:
        authorId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        authorType:
          default: CLIENT
          type: string
      required:
      - authorId
      type: object
    BillingInfo:
      properties:
        companyName:
          type: string
        companyNumber:
          nullable: true
          type: string
        invoiceAddressCity:
          type: string
        invoiceAddressCountryId:
          example: CZ
          format: id
          type: string
        invoiceAddressPostcode:
          type: string
        invoiceAddressStreet:
          type: string
        vatCountryId:
          example: CZ
          format: id
          type: string
        vatMode:
          enum:
          - DOMESTIC_VAT_PAYER
          - DOMESTIC_NOT_VAT_PAYER
          - EU_REVERSE_CHARGE
          - EU_MOSS
          - EU_NOT_VAT_PAYER
          - NOT_EU
          - NOT_EU_VERIFIED
          type: string
        vatNumber:
          nullable: true
          type: string
        vatRate:
          format: decimal
          type: number
        vatVerified:
          type: boolean
      required:
      - companyName
      - invoiceAddressStreet
      - invoiceAddressCity
      - invoiceAddressPostcode
      - invoiceAddressCountryId
      - vatCountryId
      - vatMode
      - vatRate
      - vatVerified
      type: object
    BuildCache:
      properties:
        buildServiceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        configChecksum:
          type: string
        snapshotId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - buildServiceStackId
      - snapshotId
      - configChecksum
      type: object
    Client:
      properties:
        accountName:
          type: string
        avatar:
          $ref: '#/components/schemas/ClientAvatar'
        billingInfo:
          $ref: '#/components/schemas/BillingInfo'
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        paymentProviderClientId:
          nullable: true
          type: string
        verifiedByTopUp:
          type: boolean
        verifiedManually:
          type: boolean
      required:
      - id
      - accountName
      - verifiedByTopUp
      - verifiedManually
      type: object
    ClientAvatar:
      properties:
        externalAvatarUrl:
          nullable: true
          type: string
          format: uri
        largeAvatarUrl:
          nullable: true
          type: string
          format: uri
        smallAvatarUrl:
          nullable: true
          type: string
          format: uri
      type: object
    ClientInfoLanguageObject:
      properties:
        id:
          type: string
      required:
      - id
      type: object
    ClientInfoObject:
      properties:
        companyName:
          type: string
        companyNumber:
          nullable: true
          type: string
        created:
          format: date-time
          type: string
        currency:
          $ref: '#/components/schemas/ClientInfoObjectCurrency'
        id:
          type: string
        language:
          $ref: '#/components/schemas/ClientInfoLanguageObject'
        lastPublicUpdate:
          format: date-time
          type: string
        lastUpdate:
          format: date-time
          type: string
        status:
          type: string
        vatCountry:
          type: string
        vatMode:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        vatPayer:
          type: boolean
        vatRate:
          format: float
          type: number
      required:
      - id
      - companyName
      - created
      - lastUpdate
      - lastPublicUpdate
      - status
      - vatCountry
      - vatPayer
      - vatRate
      - currency
      - language
      type: object
    ClientInfoObjectCurrency:
      properties:
        displaySymbolBefore:
          type: boolean
        id:
          type: string
        roundDigits:
          format: int
          type: integer
        symbol:
          type: string
      required:
      - id
      - symbol
      - displaySymbolBefore
      - roundDigits
      type: object
    ClientLight:
      properties:
        accountName:
          type: string
        avatar:
          $ref: '#/components/schemas/ClientAvatar'
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        status:
          enum:
          - ACTIVE
          type: string
      required:
      - id
      - created
      - lastUpdate
      - accountName
      - status
      type: object
    ClientUserExtra:
      properties:
        client:
          $ref: '#/components/schemas/Client'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        roleCode:
          enum:
          - MANAGER
          type: string
        status:
          enum:
          - WAITING_AUTHORIZATION
          - ACTIVE
          - BEING_DELETED
          type: string
        user:
          $ref: '#/components/schemas/UserLight'
        userId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - clientId
      - userId
      - status
      - roleCode
      - client
      - user
      type: object
    Country:
      properties:
        id:
          example: CZ
          format: id
          type: string
        inEu:
          type: boolean
        name:
          type: string
      required:
      - id
      - name
      - inEu
      type: object
    Currency:
      properties:
        displaySymbolBefore:
          type: boolean
        id:
          format: id
          type: string
        roundDigits:
          format: int
          type: integer
        symbol:
          type: string
      required:
      - id
      - symbol
      - displaySymbolBefore
      - roundDigits
      type: object
    CustomAutoscaling:
      properties:
        horizontalAutoscalingNullable:
          $ref: '#/components/schemas/HorizontalAutoscalingNullable'
        verticalAutoscalingNullable:
          $ref: '#/components/schemas/VerticalAutoscalingNullable'
      type: object
    Env:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        type:
          default: USER
          enum:
          - USER
          - SYSTEM
          type: string
      required:
      - id
      - key
      - content
      - projectId
      - clientId
      - created
      - lastUpdate
      type: object
    Error:
      format: error
      properties:
        code:
          type: string
        message:
          type: string
    ErrorObject:
      properties:
        code:
          type: string
        message:
          type: string
        meta:
          format: jsonRawMessage
          nullable: true
          type: string
      required:
      - code
      - message
      type: object
    EsAppVersion:
      properties:
        build:
          $ref: '#/components/schemas/AppVersionBuild'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        githubIntegration:
          $ref: '#/components/schemas/AppVersionGithubIntegration'
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        publicGitSource:
          $ref: '#/components/schemas/AppVersionPublicGitSource'
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        source:
          default: CLI
          enum:
          - CLI
          - GUI
          - GITHUB
          - GITLAB
          - GIT
          - NONE
          type: string
        status:
          default: UPLOADING
          enum:
          - UPLOADING
          - WAITING_TO_DEPLOY
          - DEPLOYING
          - DEPLOY_FAILED
          - ACTIVE
          - BACKUP
          - BUILDING
          - WAITING_TO_BUILD
          - BUILD_FAILED
          - PREPARING_RUNTIME
          - PREPARING_RUNTIME_FAILED
          - BUILD_VALIDATION_FAILED
          - CANCELLED
          type: string
        userData:
          format: objectArray
          items:
            $ref: '#/components/schemas/AppVersionUserData'
          type: array
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - sequence
      - userData
      - created
      - lastUpdate
      type: object
    EsCardPayment:
      properties:
        amount:
          description: Amount without VAT
          format: decimal
          type: number
        amountVat:
          description: Amount that contains a VAT tax
          format: decimal
          type: number
        billingInfoObject:
          format: jsonRawMessage
          nullable: true
          type: string
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        currencyId:
          format: id
          type: string
        datePaid:
          format: date-time
          nullable: true
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        interactionType:
          default: ONSESSION
          description: OFFSESSION musí obsahovat i requestId.
          enum:
          - ONSESSION
          - OFFSESSION
          type: string
        lastUpdate:
          format: date-time
          type: string
        paymentMethod:
          description: Stripe source_id - zdroj, odkud se mají prostředky strhnout.
          nullable: true
          type: string
        paymentObject:
          format: jsonRawMessage
          nullable: true
          type: string
        requestId:
          description: Id requestu, který payment vyvolal - offsession platby.
          nullable: true
          type: string
        status:
          default: NEW
          enum:
          - NEW
          - PROCESSING
          - PROCESSING_FAILED
          - PAYMENT_DECLINED
          - PAYMENT_DECLINE_FAILED
          - PAYMENT_SUCCESS
          - BALANCE_UPDATED
          - BALANCE_UPDATE_FAILED
          - INVOICED
          - INVOICING_FAILED
          - FINISHED
          - CANCELED
          - DECLINED
          type: string
      required:
      - id
      - clientId
      - created
      - amount
      - amountVat
      - currencyId
      - lastUpdate
      type: object
    EsClient:
      properties:
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
      required:
      - id
      - created
      - lastUpdate
      type: object
    EsClientUser:
      properties:
        client:
          $ref: '#/components/schemas/ClientLight'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        roleCode:
          enum:
          - MANAGER
          type: string
        status:
          enum:
          - WAITING_AUTHORIZATION
          - ACTIVE
          - BEING_DELETED
          type: string
        user:
          $ref: '#/components/schemas/UserLight'
        userId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - clientId
      - userId
      - status
      - roleCode
      - client
      - user
      type: object
    EsColumnsDefaultSort:
      properties:
        ascending:
          type: boolean
        name:
          type: string
      required:
      - name
      - ascending
      type: object
    EsColumnsItem:
      properties:
        defaultOperator:
          type: string
        defaultView:
          type: boolean
        name:
          type: string
        operators:
          format: stringArray
          items:
            type: string
          type: array
        outputName:
          type: string
        reference:
          type: string
        referenceColumn:
          type: string
        subType:
          type: string
        suggest:
          type: boolean
        type:
          type: string
        typeData:
          type: string
      required:
      - name
      - outputName
      - type
      - subType
      - suggest
      - defaultView
      - operators
      - defaultOperator
      - reference
      - referenceColumn
      - typeData
      type: object
    EsContainer:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        currentHardwareResource:
          $ref: '#/components/schemas/HardwareResource'
        hostname:
          nullable: true
          type: string
        id:
          description: =container.Id in zerops infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int
          type: integer
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceId:
          description: = service.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        status:
          default: CREATING
          enum:
          - CREATING
          - ACTIVE
          - DELETING
          - FAILED
          - STOPPING
          - STOPPED
          - STARTING
          - RESTARTING
          - RELOADING
          - MOVING
          - ACTION_FAILED
          - MOVING_STOPPED
          type: string
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - serviceId
      - number
      - currentHardwareResource
      - created
      - lastUpdate
      type: object
    EsCountry:
      properties:
        id:
          example: CZ
          format: id
          type: string
        inEu:
          type: boolean
        name:
          $ref: '#/components/schemas/LanguageTextJsonObject'
      required:
      - id
      - name
      - inEu
      type: object
    EsCurrency:
      properties:
        displaySymbolBefore:
          type: boolean
        id:
          format: id
          type: string
        roundDigits:
          format: int
          type: integer
        symbol:
          type: string
      required:
      - id
      - symbol
      - displaySymbolBefore
      - roundDigits
      type: object
    EsLanguage:
      properties:
        id:
          format: id
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    EsProcess:
      properties:
        actionName:
          type: string
        appVersion:
          $ref: '#/components/schemas/AppVersionJsonObject'
        canceledByUser:
          $ref: '#/components/schemas/UserJsonObject'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        createdBySystem:
          type: boolean
        createdByUser:
          $ref: '#/components/schemas/UserJsonObject'
        finished:
          format: date-time
          nullable: true
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        project:
          $ref: '#/components/schemas/ProjectLightJsonObject'
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackLightJsonObject'
          type: array
        started:
          format: date-time
          nullable: true
          type: string
        status:
          default: PENDING
          type: string
      required:
      - id
      - clientId
      - projectId
      - project
      - serviceStacks
      - sequence
      - createdByUser
      - actionName
      - created
      - lastUpdate
      - createdBySystem
      type: object
    EsProject:
      properties:
        autoStartup:
          type: boolean
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        description:
          format: text
          nullable: true
          type: string
        envList:
          format: objectArray
          items:
            $ref: '#/components/schemas/Env'
          type: array
        id:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        logForwardingType:
          nullable: true
          type: string
        name:
          type: string
        publicIpV4:
          nullable: true
          type: string
        publicIpV6:
          nullable: true
          type: string
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - DELETING
          - FAILED
          - STOPPING
          - STOPPED
          - STARTING
          type: string
        tagList:
          format: stringArray
          items:
            type: string
          type: array
        zeropsSubdomainHost:
          nullable: true
          type: string
      required:
      - id
      - clientId
      - name
      - tagList
      - created
      - lastUpdate
      - autoStartup
      - envList
      type: object
    EsPublicHttpRouting:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        deleteOnSync:
          type: boolean
        domains:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingDomain'
          type: array
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        isEditable:
          type: boolean
        isSynced:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        locations:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingLocation'
          type: array
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sslEnabled:
          type: boolean
      required:
      - id
      - clientId
      - projectId
      - sslEnabled
      - domains
      - locations
      - created
      - lastUpdate
      - isSynced
      - deleteOnSync
      - isEditable
      type: object
    EsPublicPortRouting:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        deleteOnSync:
          type: boolean
        firewallAllowMyIp:
          type: boolean
        firewallIpRanges:
          format: stringArray
          items:
            type: string
          type: array
        firewallPolicy:
          default: BLACKLIST
          enum:
          - BLACKLIST
          - WHITELIST
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        internalPort:
          format: int
          type: integer
        internalProtocol:
          default: tcp
          enum:
          - tcp
          - udp
          type: string
        isSynced:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        publicIpType:
          default: IP_V4
          enum:
          - IP_V4
          - IP_V6
          type: string
        publicPort:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - publicPort
      - internalPort
      - firewallIpRanges
      - firewallAllowMyIp
      - created
      - lastUpdate
      - isSynced
      - deleteOnSync
      type: object
    EsSearchItem:
      properties:
        name:
          type: string
        operator:
          type: string
        value:
          type: string
      required:
      - name
      - operator
      - value
      type: object
    EsSearchNativeItem:
      properties:
        name:
          type: string
        operator:
          type: string
        value:
          format: jsonRawMessage
          type: string
      required:
      - name
      - operator
      - value
      type: object
    EsService:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        id:
          description: = service.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        name:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        stackAccessPoint:
          type: boolean
        status:
          default: CREATING
          enum:
          - CREATING
          - ACTIVE
          - STOPPING
          - STOPPED
          - STARTING
          - RESTARTING
          - RELOADING
          - DELETING
          - DELETED
          - FAILED
          - ACTION_FAILED
          - REPAIRING
          - CONTAINER_FAILED
          - MOVING_CONTAINER
          - UPGRADING
          - SCALING
          - REPAIR_FAILED
          type: string
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - name
      - stackAccessPoint
      - created
      - lastUpdate
      type: object
    EsServiceStack:
      properties:
        activeAppVersion:
          $ref: '#/components/schemas/AppVersionLight'
        activePublicHttpRoutingCount:
          format: int
          nullable: true
          type: integer
        activePublicPortRoutingCount:
          format: int
          nullable: true
          type: integer
        buildCache:
          $ref: '#/components/schemas/BuildCache'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        connectedStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackConnectedServiceStack'
          type: array
        created:
          format: date-time
          type: string
        customAutoscaling:
          $ref: '#/components/schemas/CustomAutoscaling'
        driverId:
          format: id
          nullable: true
          type: string
        githubIntegration:
          $ref: '#/components/schemas/GithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/GitlabIntegration'
        hasPublicHttpRoutingAccess:
          type: boolean
        hasPublicPortRoutingAccess:
          type: boolean
        hasUnsyncedPublicHttpRoutingRecord:
          type: boolean
        hasUnsyncedPublicPortRecord:
          type: boolean
        hasUnsyncedUserDataRecord:
          type: boolean
        id:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        isSystem:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        mode:
          default: HA
          enum:
          - HA
          - NON_HA
          nullable: true
          type: string
        name:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        ports:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServicePort'
          type: array
        project:
          $ref: '#/components/schemas/ProjectLight'
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        reloadAvailable:
          type: boolean
        requestedPorts:
          $ref: '#/components/schemas/RequestedPortsJsonObject'
        serviceStackTypeId:
          format: id
          type: string
        serviceStackTypeInfo:
          $ref: '#/components/schemas/ServiceStackInfoJsonObject'
        serviceStackTypeVersionId:
          format: id
          type: string
        startOnProjectStart:
          type: boolean
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - STOPPING
          - STOPPED
          - STARTING
          - RESTARTING
          - RELOADING
          - DELETING
          - DELETED
          - FAILED
          - ACTION_FAILED
          - UPGRADING
          - READY_TO_DEPLOY
          - SERVICE_CREATING
          - SERVICE_ACTIVE
          - SERVICE_STOPPING
          - SERVICE_STOPPED
          - SERVICE_STARTING
          - SERVICE_RESTARTING
          - SERVICE_RELOADING
          - SERVICE_DELETING
          - SERVICE_DELETED
          - SERVICE_FAILED
          - SERVICE_ACTION_FAILED
          - SERVICE_REPAIRING
          - SERVICE_CONTAINER_FAILED
          - SERVICE_MOVING_CONTAINER
          - SERVICE_UPGRADING
          - SERVICE_SCALING
          - SERVICE_REPAIR_FAILED
          - REPAIRING
          - CONTAINER_FAILED
          - MOVING_CONTAINER
          - SCALING
          - REPAIR_FAILED
          type: string
        subdomainAccess:
          type: boolean
        userData:
          format: objectArray
          items:
            $ref: '#/components/schemas/UserDataLight'
          type: array
        versionNumber:
          format: emptyString
          type: string
      required:
      - id
      - projectId
      - clientId
      - serviceStackTypeId
      - serviceStackTypeVersionId
      - serviceStackTypeInfo
      - name
      - created
      - lastUpdate
      - ports
      - requestedPorts
      - isSystem
      - subdomainAccess
      - versionNumber
      - reloadAvailable
      - project
      - userData
      - connectedStacks
      - hasUnsyncedUserDataRecord
      - hasUnsyncedPublicHttpRoutingRecord
      - hasUnsyncedPublicPortRecord
      - hasPublicHttpRoutingAccess
      - hasPublicPortRoutingAccess
      - startOnProjectStart
      type: object
    EsServiceStackType:
      properties:
        category:
          default: CORE
          enum:
          - CORE
          - HTTP_L7_BALANCER
          - STANDARD
          - USER
          - SHARED_STORAGE
          - OBJECT_STORAGE
          - BUILD
          - INTERNAL
          - PREPARE_RUNTIME
          type: string
        created:
          format: date-time
          type: string
        defaultServiceStackVersion:
          $ref: '#/components/schemas/ServiceStackTypeVersionLight'
        defaultServiceStackVersionId:
          format: id
          nullable: true
          type: string
        description:
          format: text
          type: string
        id:
          format: id
          type: string
        lastUpdate:
          format: date-time
          type: string
        name:
          type: string
        serviceStackTypeVersionList:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackTypeVersionLight'
          type: array
      required:
      - id
      - name
      - description
      - created
      - lastUpdate
      - serviceStackTypeVersionList
      type: object
    EsSortItem:
      properties:
        ascending:
          nullable: true
          type: boolean
        name:
          type: string
      required:
      - name
      type: object
    EsStatsHistory:
      properties:
        containerCount:
          format: int
          nullable: true
          type: integer
        containerId:
          nullable: true
          type: string
        cpuLimit:
          format: float
          type: number
        cpuUsed:
          format: float
          type: number
        diskLimit:
          format: float
          type: number
        diskUsed:
          format: float
          type: number
        from:
          format: date-time
          type: string
        projectId:
          type: string
        ramLimit:
          format: float
          type: number
        ramUsed:
          format: float
          type: number
        serviceId:
          nullable: true
          type: string
        serviceStackId:
          type: string
        till:
          format: date-time
          type: string
        vCpuLimit:
          format: float
          type: number
        vCpuUsed:
          format: float
          type: number
      required:
      - from
      - till
      - projectId
      - serviceStackId
      - cpuLimit
      - cpuUsed
      - vCpuLimit
      - vCpuUsed
      - ramLimit
      - ramUsed
      - diskLimit
      - diskUsed
      type: object
    EsSuggestItem:
      properties:
        column:
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        score:
          format: int
          type: integer
        text:
          type: string
      required:
      - id
      - text
      - column
      - score
      type: object
    EsTransactionDebitCostItem:
      properties:
        id:
          type: string
        periodCost:
          $ref: '#/components/schemas/EsTransactionDebitPeriodCost'
      required:
      - id
      - periodCost
      type: object
    EsTransactionDebitGroupItem:
      properties:
        ceph_active:
          format: decimal
          type: number
        ceph_inactive:
          format: decimal
          type: number
        cpu:
          format: decimal
          type: number
        disc:
          format: decimal
          type: number
        from:
          format: date-time
          type: string
        projectId:
          type: string
        projectName:
          type: string
        ram:
          format: decimal
          type: number
        stackId:
          type: string
        stackName:
          type: string
        sumTotalPrice:
          format: decimal
          type: number
        till:
          format: date-time
          type: string
        vCpu:
          format: decimal
          type: number
      required:
      - from
      - till
      - projectId
      - stackId
      - projectName
      - stackName
      - vCpu
      - cpu
      - ram
      - disc
      - ceph_active
      - ceph_inactive
      - sumTotalPrice
      type: object
    EsTransactionDebitPeriodCost:
      properties:
        averageLast30Days:
          format: float
          type: number
        averageLast30DaysPrecision:
          format: int
          type: integer
        last7days:
          format: float
          type: number
        last12month:
          format: float
          type: number
        last24hours:
          format: float
          type: number
        last30days:
          format: float
          type: number
        lastMonth:
          format: float
          type: number
        lastYear:
          format: float
          type: number
        thisMonth:
          format: float
          type: number
        thisYear:
          format: float
          type: number
        today:
          format: float
          type: number
        yesterday:
          format: float
          type: number
      required:
      - last24hours
      - last7days
      - last30days
      - last12month
      - today
      - yesterday
      - lastMonth
      - thisMonth
      - lastYear
      - thisYear
      - averageLast30Days
      - averageLast30DaysPrecision
      type: object
    EsUserData:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackName:
          type: string
        type:
          default: SECRET
          description: Odfiltrovat záznamy userData.type == INTERNAL na výstupu /search
          enum:
          - READ_ONLY
          - EDITABLE
          - SECRET
          - INTERNAL
          - ENV
          type: string
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - key
      - content
      - created
      - lastUpdate
      - serviceStackName
      type: object
    EsUserNotification:
      properties:
        acknowledged:
          type: boolean
        actionCreated:
          format: date-time
          type: string
        actionFinished:
          format: date-time
          nullable: true
          type: string
        actionName:
          type: string
        appVersion:
          $ref: '#/components/schemas/AppVersionJsonObject'
        canceledByUser:
          $ref: '#/components/schemas/UserJsonObject'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        createdByUser:
          $ref: '#/components/schemas/UserJsonObject'
        error:
          $ref: '#/components/schemas/ErrorObject'
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        project:
          $ref: '#/components/schemas/ProjectLightJsonObject'
        serviceStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackLightJsonObject'
          type: array
        type:
          default: SUCCESS
          enum:
          - SUCCESS
          - WARNING
          - ERROR
          type: string
        unreadByUserIds:
          format: stringArray
          items:
            type: string
          type: array
        userId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - clientId
      - serviceStacks
      - createdByUser
      - actionName
      - actionCreated
      - userId
      - acknowledged
      - unreadByUserIds
      type: object
    GetAppVersion:
      properties:
        activationDate:
          format: date-time
          nullable: true
          type: string
        build:
          $ref: '#/components/schemas/AppVersionBuild'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        createdByUser:
          $ref: '#/components/schemas/UserJsonObject'
        githubIntegration:
          $ref: '#/components/schemas/AppVersionGithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/AppVersionGitlabIntegration'
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        publicGitSource:
          $ref: '#/components/schemas/AppVersionPublicGitSource'
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        source:
          default: CLI
          enum:
          - CLI
          - GUI
          - GITHUB
          - GITLAB
          - GIT
          - NONE
          type: string
        status:
          default: UPLOADING
          enum:
          - UPLOADING
          - WAITING_TO_DEPLOY
          - DEPLOYING
          - DEPLOY_FAILED
          - ACTIVE
          - BACKUP
          - BUILDING
          - WAITING_TO_BUILD
          - BUILD_FAILED
          - PREPARING_RUNTIME
          - PREPARING_RUNTIME_FAILED
          - BUILD_VALIDATION_FAILED
          - CANCELLED
          type: string
        userDataList:
          format: objectArray
          items:
            $ref: '#/components/schemas/AppVersionUserData'
          type: array
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - sequence
      - userDataList
      - created
      - lastUpdate
      type: object
    GithubIntegration:
      properties:
        authorizationRequired:
          type: boolean
        branchName:
          nullable: true
          type: string
        eventType:
          enum:
          - BRANCH
          - TAG
          type: string
        isActive:
          type: boolean
        repositoryFullName:
          type: string
        tagRegex:
          nullable: true
          type: string
        userId:
          type: string
        webhookId:
          format: int
          nullable: true
          type: integer
      required:
      - userId
      - authorizationRequired
      - eventType
      - isActive
      - repositoryFullName
      type: object
    GitlabIntegration:
      properties:
        authorizationRequired:
          type: boolean
        branchName:
          nullable: true
          type: string
        eventType:
          enum:
          - BRANCH
          - TAG
          type: string
        isActive:
          type: boolean
        repositoryFullName:
          type: string
        tagRegex:
          nullable: true
          type: string
        userId:
          type: string
        webhookId:
          format: int
          nullable: true
          type: integer
      required:
      - userId
      - authorizationRequired
      - eventType
      - isActive
      - repositoryFullName
      type: object
    HardwareResource:
      properties:
        cpuCoreCount:
          format: int
          type: integer
        diskGBytes:
          format: int
          type: integer
        memoryMBytes:
          format: int
          type: integer
      required:
      - cpuCoreCount
      - memoryMBytes
      - diskGBytes
      type: object
    HorizontalAutoscaling:
      properties:
        maxContainerCount:
          format: int
          type: integer
        minContainerCount:
          format: int
          type: integer
      required:
      - maxContainerCount
      - minContainerCount
      type: object
    HorizontalAutoscalingNullable:
      properties:
        maxContainerCount:
          format: int
          nullable: true
          type: integer
        minContainerCount:
          format: int
          nullable: true
          type: integer
      type: object
    Language:
      properties:
        id:
          format: id
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    LanguageTextJsonObject:
      properties:
        cs:
          example: cesky
          type: string
        en:
          example: anglicky
          type: string
      required:
      - cs
      - en
      type: object
    LocationServiceStackInfo:
      properties:
        serviceStackName:
          type: string
        serviceStackTypeName:
          type: string
        serviceStackTypeVersionName:
          type: string
      required:
      - serviceStackName
      - serviceStackTypeName
      - serviceStackTypeVersionName
      type: object
    PaymentSource:
      properties:
        addressCity:
          type: string
        addressCountry:
          type: string
        addressLine1:
          type: string
        addressLine1Check:
          type: string
        addressLine2:
          type: string
        addressState:
          type: string
        addressZip:
          type: string
        addressZipCheck:
          type: string
        brand:
          type: string
        country:
          type: string
        cvcCheck:
          type: string
        expMonth:
          type: string
        expYear:
          type: string
        funding:
          type: string
        id:
          type: string
        last4:
          type: string
        metadata:
          format: map
          type: object
        name:
          type: string
        object:
          type: string
        tokenizationMethod:
          type: string
      required:
      - id
      - object
      - addressCity
      - addressCountry
      - addressLine1
      - addressLine1Check
      - addressLine2
      - addressState
      - addressZip
      - addressZipCheck
      - brand
      - country
      - cvcCheck
      - expMonth
      - expYear
      - funding
      - last4
      - name
      - tokenizationMethod
      - metadata
      type: object
    PrepareCustomRuntime:
      properties:
        containerCreationStart:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackName:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          nullable: true
          type: string
        startDate:
          format: date-time
          nullable: true
          type: string
      type: object
    Process:
      properties:
        actionName:
          type: string
        appVersion:
          $ref: '#/components/schemas/AppVersionJsonObject'
        canceledByUser:
          $ref: '#/components/schemas/UserJsonObject'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        createdBySystem:
          type: boolean
        createdByUser:
          $ref: '#/components/schemas/UserJsonObject'
        finished:
          format: date-time
          nullable: true
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        project:
          $ref: '#/components/schemas/ProjectLightJsonObject'
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackLightJsonObject'
          type: array
        started:
          format: date-time
          nullable: true
          type: string
        status:
          default: PENDING
          type: string
      required:
      - id
      - clientId
      - projectId
      - project
      - serviceStacks
      - sequence
      - createdByUser
      - actionName
      - created
      - lastUpdate
      - createdBySystem
      type: object
    Project:
      properties:
        autoStartup:
          type: boolean
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        description:
          format: text
          nullable: true
          type: string
        id:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        logForwardingType:
          nullable: true
          type: string
        mode:
          default: LEGACY
          enum:
          - LEGACY
          - LIGHT
          - SERIOUS
          type: string
        name:
          type: string
        publicIpV4:
          nullable: true
          type: string
        publicIpV6:
          nullable: true
          type: string
        recipeSource:
          format: text
          nullable: true
          type: string
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - DELETING
          - FAILED
          - STOPPING
          - STOPPED
          - STARTING
          type: string
        tagList:
          format: stringArray
          items:
            type: string
          type: array
        zeropsSubdomainHost:
          nullable: true
          type: string
      required:
      - id
      - clientId
      - name
      - tagList
      - created
      - lastUpdate
      - autoStartup
      type: object
    ProjectEnvPut:
      properties:
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
      required:
      - key
      - content
      type: object
    ProjectImportServiceStack:
      properties:
        error:
          $ref: '#/components/schemas/ErrorObject'
        id:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        name:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        processes:
          format: objectArray
          items:
            $ref: '#/components/schemas/Process'
          type: array
      required:
      - id
      - name
      - processes
      type: object
    ProjectLight:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        description:
          format: text
          nullable: true
          type: string
        id:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        mode:
          default: LEGACY
          enum:
          - LEGACY
          - LIGHT
          - SERIOUS
          type: string
        name:
          type: string
        recipeSource:
          format: text
          nullable: true
          type: string
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - DELETING
          - FAILED
          - STOPPING
          - STOPPED
          - STARTING
          type: string
        tagList:
          format: stringArray
          items:
            type: string
          type: array
      required:
      - id
      - clientId
      - name
      - tagList
      - created
      - lastUpdate
      type: object
    ProjectLightJsonObject:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        description:
          format: text
          nullable: true
          type: string
        id:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        name:
          type: string
        recipeSource:
          format: text
          nullable: true
          type: string
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - DELETING
          - FAILED
          - STOPPING
          - STOPPED
          - STARTING
          type: string
        tagList:
          format: stringArray
          items:
            type: string
          type: array
      required:
      - id
      - clientId
      - name
      - tagList
      - created
      - lastUpdate
      type: object
    ProjectVpnPeerSetup:
      properties:
        ipv4:
          $ref: '#/components/schemas/VpnIpConfig'
        ipv6:
          $ref: '#/components/schemas/VpnIpConfig'
        publicKey:
          type: string
        setup:
          type: string
        setupLinux:
          type: string
        setupMacOS:
          type: string
        setupWindows:
          type: string
      required:
      - publicKey
      - ipv4
      - ipv6
      - setup
      - setupLinux
      - setupMacOS
      - setupWindows
      type: object
    ProjectVpnSetup:
      properties:
        ipv4:
          $ref: '#/components/schemas/VpnConfig'
        ipv6:
          $ref: '#/components/schemas/VpnConfig'
        publicKey:
          type: string
      required:
      - publicKey
      - ipv4
      - ipv6
      type: object
    PublicHttpRouting:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        deleteOnSync:
          type: boolean
        domains:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingDomain'
          type: array
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        isEditable:
          type: boolean
        isSynced:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        locations:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingLocation'
          type: array
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sslEnabled:
          type: boolean
      required:
      - id
      - clientId
      - projectId
      - sslEnabled
      - domains
      - locations
      - created
      - lastUpdate
      - isSynced
      - isEditable
      - deleteOnSync
      type: object
    PublicHttpRoutingDomain:
      properties:
        dnsCheckStatus:
          enum:
          - PENDING
          - CHECKING
          - OK
          - FAILED
          - IGNORED
          type: string
        domainName:
          type: string
        sslStatus:
          enum:
          - INACTIVE
          - BEING_INSTALLED
          - WAITING_FOR_DNS
          - ACTIVE
          - INSTALLATION_FAILED
          type: string
      required:
      - domainName
      - dnsCheckStatus
      - sslStatus
      type: object
    PublicHttpRoutingLocation:
      properties:
        path:
          type: string
        port:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackInfo:
          $ref: '#/components/schemas/LocationServiceStackInfo'
      required:
      - path
      - port
      - serviceStackId
      - serviceStackInfo
      type: object
    PublicHttpRoutingLocationPost:
      properties:
        path:
          type: string
        port:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - path
      - port
      - serviceStackId
      type: object
    PublicHttpRoutingLocationPut:
      properties:
        path:
          type: string
        port:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - path
      - port
      - serviceStackId
      type: object
    PublicPortRouting:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        deleteOnSync:
          type: boolean
        firewallAllowMyIp:
          type: boolean
        firewallIpRanges:
          format: stringArray
          items:
            type: string
          type: array
        firewallPolicy:
          default: BLACKLIST
          enum:
          - BLACKLIST
          - WHITELIST
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        internalPort:
          format: int
          type: integer
        internalProtocol:
          default: tcp
          enum:
          - tcp
          - udp
          type: string
        isSynced:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        publicIpType:
          default: IP_V4
          enum:
          - IP_V4
          - IP_V6
          type: string
        publicPort:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - publicPort
      - internalPort
      - firewallIpRanges
      - firewallAllowMyIp
      - created
      - lastUpdate
      - isSynced
      - deleteOnSync
      type: object
    Region:
      properties:
        address:
          type: string
        isDefault:
          type: boolean
        name:
          type: string
      required:
      - name
      - isDefault
      - address
      type: object
    RequestAuth:
      properties:
        email:
          format: email
          type: string
        password:
          type: string
      required:
      - email
      - password
      type: object
    RequestAuthRefresh:
      properties:
        refreshTokenId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - refreshTokenId
      type: object
    RequestAutoscaling:
      properties:
        customAutoscaling:
          $ref: '#/components/schemas/CustomAutoscaling'
        mode:
          default: HA
          enum:
          - HA
          - NON_HA
          nullable: true
          type: string
      type: object
    RequestClientAuthorize:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        email:
          format: urlEncodedBase64Email
          type: string
        token:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - clientId
      - email
      - token
      type: object
    RequestClientUser:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        roleCode:
          enum:
          - MANAGER
          type: string
      required:
      - clientId
      - roleCode
      type: object
    RequestClientUserConnection:
      properties:
        roleCode:
          enum:
          - MANAGER
          type: string
      required:
      - roleCode
      type: object
    RequestClientUserValidate:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        email:
          format: email
          type: string
      required:
      - clientId
      - email
      type: object
    RequestDeleteBillingClientPaymentSource:
      properties:
        sourceId:
          format: id
          type: string
      required:
      - sourceId
      type: object
    RequestEsExport:
      properties:
        columns:
          format: stringArray
          items:
            type: string
          type: array
        format:
          nullable: true
          type: string
        search:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSearchItem'
          type: array
        sort:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSortItem'
          type: array
      required:
      - search
      - columns
      - sort
      type: object
    RequestEsFilter:
      properties:
        limit:
          format: int
          nullable: true
          type: integer
        offset:
          format: int
          nullable: true
          type: integer
        receiverId:
          nullable: true
          type: string
        search:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSearchItem'
          type: array
        sort:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSortItem'
          type: array
        subscriptionName:
          nullable: true
          type: string
        text:
          nullable: true
          type: string
      required:
      - search
      - sort
      type: object
    RequestEsStatsHistoryFilter:
      properties:
        from:
          format: date-time
          nullable: true
          type: string
        groupBy:
          enum:
          - serviceStackId
          - serviceId
          - containerId
          type: string
        limit:
          format: int
          nullable: true
          type: integer
        receiverId:
          nullable: true
          type: string
        search:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSearchNativeItem'
          type: array
        subscriptionName:
          nullable: true
          type: string
        till:
          format: date-time
          nullable: true
          type: string
        timeGroupBy:
          type: string
        timeZone:
          type: string
      required:
      - search
      - timeZone
      - groupBy
      - timeGroupBy
      type: object
    RequestEsSuggest:
      properties:
        column:
          nullable: true
          type: string
        search:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSearchItem'
          type: array
        text:
          nullable: true
          type: string
      required:
      - search
      type: object
    RequestEsTransactionDebitCost:
      properties:
        search:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSearchItem'
          type: array
      required:
      - search
      type: object
    RequestEsTransactionDebitGroupBy:
      properties:
        from:
          format: date-time
          type: string
        groupBy:
          enum:
          - stackId
          - metricId
          - projectId
          type: string
        receiverId:
          nullable: true
          type: string
        search:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSearchItem'
          type: array
        subscriptionName:
          nullable: true
          type: string
        till:
          format: date-time
          type: string
        timeGroupBy:
          type: string
        timeZone:
          type: string
      required:
      - search
      - from
      - till
      - timeZone
      - groupBy
      - timeGroupBy
      type: object
    RequestExternalRepositoryIntegration:
      properties:
        githubIntegration:
          $ref: '#/components/schemas/GithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/GitlabIntegration'
      type: object
    RequestGithubAuth:
      properties:
        code:
          type: string
        email:
          nullable: true
          type: string
        state:
          type: string
      required:
      - code
      - state
      type: object
    RequestGitlabAuth:
      properties:
        code:
          type: string
        email:
          nullable: true
          type: string
        state:
          type: string
      required:
      - code
      - state
      type: object
    RequestPostAppVersion:
      properties:
        name:
          nullable: true
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - serviceStackId
      type: object
    RequestPostBillingPayment:
      properties:
        amount:
          format: decimal
          type: number
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        promoCode:
          nullable: true
          type: string
        sourceId:
          format: id
          nullable: true
          type: string
      required:
      - amount
      - clientId
      type: object
    RequestPostClientCheckVAT:
      properties:
        vatNumber:
          type: string
      required:
      - vatNumber
      type: object
    RequestPostObjectStorageServiceStack:
      properties:
        diskGBytes:
          format: int
          type: integer
        name:
          description: "hostname\n\n\t\tStejné požadavky, jako jsou na pole NAME v
            doménovém záznamu\n\t\n\t\tif ( domainName NOT ENDS WITH \".\" ? ) then
            (yes)\n\t\t: domainName = inputDomainName || \".\";\n\t\tendif;\n\t\n\t\tif
            ( domainRecord.name CONTAINS \"..\" ? ) then ( yes )\n\t\t: EXCEPTION
            400;\n\t\tstop;\n\t\tendif;\n\t\n\t\tif ( length(domainRecord.name > 255)\n\t\t:
            EXCEPTION 400;\n\t\tstop;\n\t\tendif;\n\t\n\t\tif ( length(BETWEEN \".\"
            AND \".\" domainRecord.name > 63)\n\t\t: EXCEPTION 400;\n\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        policy:
          nullable: true
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        rawPolicy:
          format: text
          nullable: true
          type: string
      required:
      - projectId
      - name
      - diskGBytes
      type: object
    RequestPostProject:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        description:
          format: text
          nullable: true
          type: string
        envVariables:
          default: '[]'
          format: objectArray
          items:
            $ref: '#/components/schemas/ProjectEnvPut'
          type: array
        maxCreditLimit:
          format: decimal
          nullable: true
          type: number
        mode:
          default: LIGHT
          enum:
          - LEGACY
          - LIGHT
          - SERIOUS
          nullable: true
          type: string
        name:
          type: string
        tagList:
          format: stringArray
          items:
            type: string
          type: array
      required:
      - clientId
      - name
      - tagList
      type: object
    RequestPostProjectTagList:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - clientId
      type: object
    RequestPostProjectVpn:
      properties:
        publicKey:
          type: string
      required:
      - publicKey
      type: object
    RequestPostStandardServiceStack:
      properties:
        customAutoscaling:
          $ref: '#/components/schemas/CustomAutoscaling'
        mode:
          default: HA
          enum:
          - HA
          - NON_HA
          nullable: true
          type: string
        name:
          description: "hostname\n\n\t\tStejné požadavky, jako jsou na pole NAME v
            doménovém záznamu\n\t\n\t\tif ( domainName NOT ENDS WITH \".\" ? ) then
            (yes)\n\t\t: domainName = inputDomainName || \".\";\n\t\tendif;\n\t\n\t\tif
            ( domainRecord.name CONTAINS \"..\" ? ) then ( yes )\n\t\t: EXCEPTION
            400;\n\t\tstop;\n\t\tendif;\n\t\n\t\tif ( length(domainRecord.name > 255)\n\t\t:
            EXCEPTION 400;\n\t\tstop;\n\t\tendif;\n\t\n\t\tif ( length(BETWEEN \".\"
            AND \".\" domainRecord.name > 63)\n\t\t: EXCEPTION 400;\n\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        startWithoutCode:
          default: "0"
          type: boolean
        userData:
          default: '[]'
          format: objectArray
          items:
            $ref: '#/components/schemas/UserDataPut'
          type: array
      required:
      - projectId
      - name
      type: object
    RequestProjectEnvPost:
      properties:
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - projectId
      - key
      - content
      type: object
    RequestProjectEnvPut:
      properties:
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
      required:
      - key
      - content
      type: object
    RequestProjectEnvPutEnvFile:
      properties:
        envFile:
          format: text
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - projectId
      - envFile
      type: object
    RequestProjectImport:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        recipeSource:
          format: text
          nullable: true
          type: string
        yaml:
          format: text
          type: string
      required:
      - clientId
      - yaml
      type: object
    RequestPublicHttpRoutingPost:
      properties:
        domains:
          format: stringArray
          items:
            type: string
          type: array
        locations:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingLocationPost'
          type: array
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sslEnabled:
          type: boolean
      required:
      - projectId
      - sslEnabled
      - domains
      - locations
      type: object
    RequestPublicHttpRoutingPut:
      properties:
        domains:
          format: stringArray
          items:
            type: string
          type: array
        locations:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingLocationPut'
          type: array
        sslEnabled:
          type: boolean
      required:
      - sslEnabled
      - domains
      - locations
      type: object
    RequestPublicPortRoutingPost:
      properties:
        firewallAllowMyIp:
          type: boolean
        firewallIpRanges:
          format: stringArray
          items:
            type: string
          type: array
        firewallPolicy:
          default: BLACKLIST
          enum:
          - BLACKLIST
          - WHITELIST
          type: string
        internalPort:
          format: int
          type: integer
        internalProtocol:
          default: tcp
          enum:
          - tcp
          - udp
          type: string
        publicIpType:
          default: IP_V4
          enum:
          - IP_V4
          - IP_V6
          type: string
        publicPort:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - serviceStackId
      - publicPort
      - internalPort
      - firewallIpRanges
      - firewallAllowMyIp
      type: object
    RequestPublicPortRoutingPut:
      properties:
        firewallAllowMyIp:
          type: boolean
        firewallIpRanges:
          format: stringArray
          items:
            type: string
          type: array
        firewallPolicy:
          default: BLACKLIST
          enum:
          - BLACKLIST
          - WHITELIST
          type: string
        internalPort:
          format: int
          type: integer
        internalProtocol:
          default: tcp
          enum:
          - tcp
          - udp
          type: string
        publicIpType:
          default: IP_V4
          enum:
          - IP_V4
          - IP_V6
          type: string
        publicPort:
          format: int
          type: integer
      required:
      - publicPort
      - internalPort
      - firewallIpRanges
      - firewallAllowMyIp
      type: object
    RequestPutAppVersion:
      properties:
        name:
          nullable: true
          type: string
      type: object
    RequestPutAppVersionBuildAndDeploy:
      properties:
        zeropsYaml:
          format: mediumText
          type: string
        zeropsYamlSetup:
          nullable: true
          type: string
      required:
      - zeropsYaml
      type: object
    RequestPutAppVersionDeploy:
      properties:
        zeropsYaml:
          format: mediumText
          nullable: true
          type: string
        zeropsYamlSetup:
          nullable: true
          type: string
      type: object
    RequestPutBillingAddon:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        enabled:
          type: boolean
        recurringEnabled:
          type: boolean
      required:
      - clientId
      - recurringEnabled
      - enabled
      type: object
    RequestPutBillingClientAutocharge:
      properties:
        autoCharge:
          type: boolean
        autoChargePeriod:
          enum:
          - WEEK
          - MONTH
          type: string
        maximumChargeAmount:
          format: decimal
          type: number
      required:
      - autoCharge
      - autoChargePeriod
      - maximumChargeAmount
      type: object
    RequestPutClientAccountInfo:
      properties:
        accountName:
          type: string
      required:
      - accountName
      type: object
    RequestPutClientBillingInfo:
      properties:
        companyName:
          type: string
        companyNumber:
          nullable: true
          type: string
        invoiceAddressCity:
          type: string
        invoiceAddressCountryId:
          example: CZ
          format: id
          type: string
        invoiceAddressPostcode:
          type: string
        invoiceAddressStreet:
          type: string
        vatNumber:
          nullable: true
          type: string
      required:
      - companyName
      - invoiceAddressStreet
      - invoiceAddressCity
      - invoiceAddressPostcode
      - invoiceAddressCountryId
      type: object
    RequestPutProject:
      properties:
        description:
          format: text
          nullable: true
          type: string
        maxCreditLimit:
          format: decimal
          nullable: true
          type: number
        name:
          type: string
        tagList:
          format: stringArray
          items:
            type: string
          type: array
      required:
      - name
      - tagList
      type: object
    RequestPutProjectRemoteLogging:
      properties:
        certificate:
          format: text
          type: string
        syslogConfig:
          format: text
          type: string
        type:
          nullable: true
          type: string
      required:
      - syslogConfig
      - certificate
      type: object
    RequestPutServiceStackDebug:
      properties:
        debugBuild:
          enum:
          - NONE
          - BEFORE
          - ON_FAIL
          - AFTER
          nullable: true
          type: string
        debugRuntimePrepare:
          enum:
          - NONE
          - BEFORE
          - ON_FAIL
          - AFTER
          nullable: true
          type: string
      type: object
    RequestPutServiceStackObjectStorageSize:
      properties:
        diskGBytes:
          format: int
          type: integer
        policy:
          nullable: true
          type: string
        rawPolicy:
          format: text
          nullable: true
          type: string
      required:
      - diskGBytes
      type: object
    RequestPutSharedStorageAction:
      properties:
        sharedStorageId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - sharedStorageId
      type: object
    RequestRecoverPassword:
      properties:
        email:
          format: email
          type: string
      required:
      - email
      type: object
    RequestServiceStackBackupConfig:
      properties:
        backupPeriod:
          nullable: true
          type: string
      type: object
    RequestServiceStackImport:
      properties:
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        yaml:
          format: text
          type: string
      required:
      - projectId
      - yaml
      type: object
    RequestServiceStackNextAppVersion:
      properties:
        useCustomRuntime:
          type: boolean
      required:
      - useCustomRuntime
      type: object
    RequestStripeWebhook:
      properties:
        object:
          format: jsonRawMessage
          type: string
        type:
          type: string
      required:
      - type
      - object
      type: object
    RequestUser:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        countryCallingCode:
          format: int
          nullable: true
          type: integer
        email:
          format: email
          type: string
        firstName:
          type: string
        languageId:
          format: id
          type: string
        lastName:
          format: emptyString
          type: string
        phoneNumber:
          format: int
          nullable: true
          type: integer
        roleCode:
          enum:
          - MANAGER
          type: string
      required:
      - clientId
      - email
      - firstName
      - lastName
      - languageId
      - roleCode
      type: object
    RequestUserDataPost:
      properties:
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - serviceStackId
      - key
      - content
      type: object
    RequestUserDataPut:
      properties:
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
      required:
      - key
      - content
      type: object
    RequestUserDataPutEnvFile:
      properties:
        envFile:
          format: text
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - serviceStackId
      - envFile
      type: object
    RequestUserNotification:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - clientId
      type: object
    RequestUserPut:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        countryCallingCode:
          format: int
          nullable: true
          type: integer
        firstName:
          type: string
        languageId:
          format: id
          type: string
        lastName:
          format: emptyString
          type: string
        phoneNumber:
          format: int
          nullable: true
          type: integer
      required:
      - clientId
      - firstName
      - lastName
      - languageId
      type: object
    RequestUserPutPassword:
      properties:
        newPassword:
          type: string
        oldPassword:
          type: string
      required:
      - oldPassword
      - newPassword
      type: object
    RequestUserPutPasswordViaToken:
      properties:
        email:
          format: email
          type: string
        password:
          type: string
        token:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - email
      - password
      - token
      type: object
    RequestUserRegistration:
      properties:
        accountName:
          type: string
        email:
          format: email
          type: string
        languageId:
          format: id
          type: string
        name:
          type: string
        password:
          type: string
        promoCode:
          nullable: true
          type: string
      required:
      - email
      - password
      - languageId
      - accountName
      - name
      type: object
    RequestZeropsYamlValidation:
      properties:
        operation:
          default: DEPLOY
          enum:
          - DEPLOY
          - BUILD_AND_DEPLOY
          type: string
        serviceStackName:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        serviceStackTypeId:
          format: id
          type: string
        serviceStackTypeVersionName:
          type: string
        zeropsYaml:
          format: mediumText
          type: string
        zeropsYamlSetup:
          nullable: true
          type: string
      required:
      - serviceStackName
      - serviceStackTypeId
      - serviceStackTypeVersionName
      - zeropsYaml
      type: object
    RequestedPortsJsonObject:
      properties:
        isActive:
          type: boolean
        requestedPorts:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServicePort'
          type: array
      required:
      - isActive
      - requestedPorts
      type: object
    ResponseAuth:
      properties:
        accessToken:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        author:
          $ref: '#/components/schemas/Author'
        expiresAt:
          format: date-time
          type: string
        expiresIn:
          format: int
          type: integer
        refreshToken:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        tokenType:
          type: string
        userId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - accessToken
      - tokenType
      - expiresIn
      - expiresAt
      - refreshToken
      - userId
      - author
      type: object
    ResponseAuthLogin:
      properties:
        auth:
          $ref: '#/components/schemas/Auth'
        user:
          $ref: '#/components/schemas/User'
      required:
      - user
      - auth
      type: object
    ResponseAvailableAddons:
      properties:
        clientAddons:
          format: objectArray
          items:
            $ref: '#/components/schemas/Addon'
          type: array
        projectAddons:
          format: objectArray
          items:
            $ref: '#/components/schemas/Addon'
          type: array
      required:
      - clientAddons
      - projectAddons
      type: object
    ResponseClientSecret:
      properties:
        clientSecret:
          type: string
      required:
      - clientSecret
      type: object
    ResponseClientStatus:
      properties:
        clientInfo:
          $ref: '#/components/schemas/ClientInfoObject'
        credit:
          format: float
          type: number
        promoCredit:
          format: float
          type: number
      required:
      - credit
      - promoCredit
      - clientInfo
      type: object
    ResponseClientUserExtra:
      properties:
        client:
          $ref: '#/components/schemas/Client'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        roleCode:
          enum:
          - MANAGER
          type: string
        status:
          enum:
          - WAITING_AUTHORIZATION
          - ACTIVE
          - BEING_DELETED
          type: string
        user:
          $ref: '#/components/schemas/UserLight'
        userId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - clientId
      - userId
      - status
      - roleCode
      - client
      - user
      type: object
    ResponseClientUserValidate:
      properties:
        fullName:
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - fullName
      type: object
    ResponseDeletePublicHttpRouting:
      properties:
        deleted:
          type: boolean
        publicHttpRouting:
          $ref: '#/components/schemas/PublicHttpRouting'
      required:
      - deleted
      type: object
    ResponseDeletePublicPortRouting:
      properties:
        deleted:
          type: boolean
        publicPortRouting:
          $ref: '#/components/schemas/PublicPortRouting'
      required:
      - deleted
      type: object
    ResponseEsAppVersionResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsAppVersion'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsCardPaymentResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsCardPayment'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsClientResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsClient'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsClientUserResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsClientUser'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsColumns:
      properties:
        defaultSort:
          $ref: '#/components/schemas/EsColumnsDefaultSort'
        formats:
          format: stringArray
          items:
            type: string
          type: array
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsColumnsItem'
          type: array
      required:
      - formats
      - defaultSort
      - items
      type: object
    ResponseEsContainerResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsContainer'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsCountryResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsCountry'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsCurrencyResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsCurrency'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsDownload:
      type: object
    ResponseEsExport:
      properties:
        value:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - value
      type: object
    ResponseEsLanguageResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsLanguage'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsNames:
      properties:
        items:
          format: stringArray
          items:
            type: string
          type: array
      required:
      - items
      type: object
    ResponseEsProcessResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsProcess'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsProjectResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsProject'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsPublicHttpRoutingResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsPublicHttpRouting'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsPublicPortRoutingResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsPublicPortRouting'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsServiceResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsService'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsServiceStackResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsServiceStack'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsServiceStackTypeResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsServiceStackType'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsStatsHistoryList:
      properties:
        from:
          format: date-time
          nullable: true
          type: string
        groupBy:
          enum:
          - serviceStackId
          - serviceId
          - containerId
          type: string
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsStatsHistory'
          type: array
        limit:
          format: int
          nullable: true
          type: integer
        till:
          format: date-time
          nullable: true
          type: string
        timeGroupBy:
          type: string
        totalHits:
          format: int
          type: integer
      required:
      - totalHits
      - groupBy
      - timeGroupBy
      - items
      type: object
    ResponseEsSuggest:
      properties:
        columns:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsColumnsItem'
          type: array
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsSuggestItem'
          type: array
        text:
          type: string
      required:
      - text
      - items
      - columns
      type: object
    ResponseEsTransactionDebitCostResponse:
      properties:
        client:
          $ref: '#/components/schemas/EsTransactionDebitCostItem'
        project:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsTransactionDebitCostItem'
          type: array
        stack:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsTransactionDebitCostItem'
          type: array
      required:
      - client
      - project
      - stack
      type: object
    ResponseEsTransactionDebitGroupByResponse:
      properties:
        from:
          format: date-time
          nullable: true
          type: string
        groupBy:
          type: string
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsTransactionDebitGroupItem'
          type: array
        limit:
          format: int
          nullable: true
          type: integer
        projectId:
          nullable: true
          type: string
        stackId:
          nullable: true
          type: string
        till:
          format: date-time
          nullable: true
          type: string
        timeGroupBy:
          type: string
        totalHits:
          format: int
          type: integer
      required:
      - items
      - totalHits
      - timeGroupBy
      - groupBy
      type: object
    ResponseEsUserDataResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsUserData'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseEsUserNotificationResponse:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/EsUserNotification'
          type: array
        limit:
          format: int
          type: integer
        offset:
          format: int
          type: integer
        totalHits:
          format: int
          type: integer
      required:
      - limit
      - offset
      - totalHits
      - items
      type: object
    ResponseExternalRepositoryIntegration:
      properties:
        githubIntegration:
          $ref: '#/components/schemas/GithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/GitlabIntegration'
      type: object
    ResponseFileBrowsing:
      properties:
        accessToken:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        expiration:
          format: date-time
          type: string
        listUrl:
          type: string
          format: uri
        readFileContentUrl:
          type: string
          format: uri
        readFileUrl:
          type: string
          format: uri
      required:
      - accessToken
      - expiration
      - listUrl
      - readFileUrl
      - readFileContentUrl
      type: object
    ResponseFileDownload:
      type: object
    ResponseGetAppVersion:
      properties:
        activationDate:
          format: date-time
          nullable: true
          type: string
        build:
          $ref: '#/components/schemas/AppVersionBuild'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        createdByUser:
          $ref: '#/components/schemas/UserJsonObject'
        githubIntegration:
          $ref: '#/components/schemas/AppVersionGithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/AppVersionGitlabIntegration'
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        publicGitSource:
          $ref: '#/components/schemas/AppVersionPublicGitSource'
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        source:
          default: CLI
          enum:
          - CLI
          - GUI
          - GITHUB
          - GITLAB
          - GIT
          - NONE
          type: string
        status:
          default: UPLOADING
          enum:
          - UPLOADING
          - WAITING_TO_DEPLOY
          - DEPLOYING
          - DEPLOY_FAILED
          - ACTIVE
          - BACKUP
          - BUILDING
          - WAITING_TO_BUILD
          - BUILD_FAILED
          - PREPARING_RUNTIME
          - PREPARING_RUNTIME_FAILED
          - BUILD_VALIDATION_FAILED
          - CANCELLED
          type: string
        userDataList:
          format: objectArray
          items:
            $ref: '#/components/schemas/AppVersionUserData'
          type: array
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - sequence
      - userDataList
      - created
      - lastUpdate
      type: object
    ResponseGetBilling:
      properties:
        current:
          $ref: '#/components/schemas/BillingInfo'
      type: object
    ResponseGetProjectsByName:
      properties:
        projects:
          format: objectArray
          items:
            $ref: '#/components/schemas/Project'
          type: array
      required:
      - projects
      type: object
    ResponseGithubAuth:
      properties:
        githubUrl:
          type: string
          format: uri
      required:
      - githubUrl
      type: object
    ResponseGitlabAuth:
      properties:
        gitlabUrl:
          type: string
          format: uri
      required:
      - gitlabUrl
      type: object
    ResponseInvoice:
      properties:
        amount:
          format: decimal
          type: number
        amountVat:
          format: decimal
          type: number
        amountVatCzk:
          format: decimal
          type: number
        billingInfo:
          format: jsonRawMessage
          nullable: true
          type: string
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        currencyId:
          format: id
          type: string
        currencyRateCzk:
          format: decimal
          type: number
        dueDate:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        number:
          type: string
        paidDate:
          format: date-time
          nullable: true
          type: string
        paymentId:
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        status:
          enum:
          - PAID
          type: string
        supplier:
          format: jsonRawMessage
          type: string
        total:
          format: decimal
          type: number
        vatRate:
          format: decimal
          type: number
      required:
      - id
      - clientId
      - currencyId
      - created
      - lastUpdate
      - status
      - number
      - supplier
      - vatRate
      - amount
      - amountVat
      - amountVatCzk
      - currencyRateCzk
      - total
      - dueDate
      type: object
    ResponsePaymentSources:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sources:
          format: objectArray
          items:
            $ref: '#/components/schemas/PaymentSource'
          type: array
      required:
      - clientId
      - sources
      type: object
    ResponsePostAppVersion:
      properties:
        build:
          $ref: '#/components/schemas/AppVersionBuild'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        status:
          default: UPLOADING
          enum:
          - UPLOADING
          - WAITING_TO_DEPLOY
          - DEPLOYING
          - DEPLOY_FAILED
          - ACTIVE
          - BACKUP
          - BUILDING
          - WAITING_TO_BUILD
          - BUILD_FAILED
          - PREPARING_RUNTIME
          - PREPARING_RUNTIME_FAILED
          - BUILD_VALIDATION_FAILED
          - CANCELLED
          type: string
        uploadUrl:
          type: string
          format: uri
        userDataList:
          format: objectArray
          items:
            $ref: '#/components/schemas/AppVersionUserData'
          type: array
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - sequence
      - userDataList
      - created
      - lastUpdate
      - uploadUrl
      type: object
    ResponsePostBilling:
      properties:
        clientSecret:
          type: string
        paymentId:
          type: string
        paymentStatus:
          type: string
      required:
      - clientSecret
      - paymentId
      - paymentStatus
      type: object
    ResponseProcess:
      properties:
        actionName:
          type: string
        appVersion:
          $ref: '#/components/schemas/AppVersionJsonObject'
        canceledByUser:
          $ref: '#/components/schemas/UserJsonObject'
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        createdBySystem:
          type: boolean
        createdByUser:
          $ref: '#/components/schemas/UserJsonObject'
        finished:
          format: date-time
          nullable: true
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        project:
          $ref: '#/components/schemas/ProjectLightJsonObject'
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sequence:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackLightJsonObject'
          type: array
        started:
          format: date-time
          nullable: true
          type: string
        status:
          default: PENDING
          type: string
      required:
      - id
      - clientId
      - projectId
      - project
      - serviceStacks
      - sequence
      - createdByUser
      - actionName
      - created
      - lastUpdate
      - createdBySystem
      type: object
    ResponseProcessNil:
      properties:
        process:
          $ref: '#/components/schemas/Process'
      type: object
    ResponseProject:
      properties:
        autoStartup:
          type: boolean
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        description:
          format: text
          nullable: true
          type: string
        id:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        logForwardingType:
          nullable: true
          type: string
        mode:
          default: LEGACY
          enum:
          - LEGACY
          - LIGHT
          - SERIOUS
          type: string
        name:
          type: string
        publicIpV4:
          nullable: true
          type: string
        publicIpV6:
          nullable: true
          type: string
        recipeSource:
          format: text
          nullable: true
          type: string
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - DELETING
          - FAILED
          - STOPPING
          - STOPPED
          - STARTING
          type: string
        tagList:
          format: stringArray
          items:
            type: string
          type: array
        zeropsSubdomainHost:
          nullable: true
          type: string
      required:
      - id
      - clientId
      - name
      - tagList
      - created
      - lastUpdate
      - autoStartup
      type: object
    ResponseProjectEnv:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        type:
          default: USER
          enum:
          - USER
          - SYSTEM
          type: string
      required:
      - id
      - created
      - lastUpdate
      - clientId
      - projectId
      - key
      - content
      type: object
    ResponseProjectExport:
      properties:
        yaml:
          format: text
          type: string
      required:
      - yaml
      type: object
    ResponseProjectImport:
      properties:
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        projectName:
          type: string
        serviceStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ProjectImportServiceStack'
          type: array
      required:
      - projectId
      - projectName
      - serviceStacks
      type: object
    ResponseProjectLog:
      properties:
        accessToken:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        expiration:
          format: date-time
          type: string
        url:
          type: string
          format: uri
        urlInfo:
          type: string
      required:
      - accessToken
      - expiration
      - url
      - urlInfo
      type: object
    ResponseProjectVpnItem:
      properties:
        peer:
          $ref: '#/components/schemas/ProjectVpnPeerSetup'
        project:
          $ref: '#/components/schemas/ProjectVpnSetup'
      required:
      - project
      - peer
      type: object
    ResponseProjectVpnList:
      properties:
        peers:
          format: objectArray
          items:
            $ref: '#/components/schemas/ProjectVpnPeerSetup'
          type: array
        project:
          $ref: '#/components/schemas/ProjectVpnSetup'
      required:
      - peers
      - project
      type: object
    ResponsePublicHttpRouting:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        deleteOnSync:
          type: boolean
        domains:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingDomain'
          type: array
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        isEditable:
          type: boolean
        isSynced:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        locations:
          format: objectArray
          items:
            $ref: '#/components/schemas/PublicHttpRoutingLocation'
          type: array
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sslEnabled:
          type: boolean
      required:
      - id
      - clientId
      - projectId
      - sslEnabled
      - domains
      - locations
      - created
      - lastUpdate
      - isSynced
      - isEditable
      - deleteOnSync
      type: object
    ResponsePublicPortRouting:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        created:
          format: date-time
          type: string
        deleteOnSync:
          type: boolean
        firewallAllowMyIp:
          type: boolean
        firewallIpRanges:
          format: stringArray
          items:
            type: string
          type: array
        firewallPolicy:
          default: BLACKLIST
          enum:
          - BLACKLIST
          - WHITELIST
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        internalPort:
          format: int
          type: integer
        internalProtocol:
          default: tcp
          enum:
          - tcp
          - udp
          type: string
        isSynced:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        publicIpType:
          default: IP_V4
          enum:
          - IP_V4
          - IP_V6
          type: string
        publicPort:
          format: int
          type: integer
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - publicPort
      - internalPort
      - firewallIpRanges
      - firewallAllowMyIp
      - created
      - lastUpdate
      - isSynced
      - deleteOnSync
      type: object
    ResponseRegionList:
      properties:
        items:
          format: objectArray
          items:
            $ref: '#/components/schemas/Region'
          type: array
      required:
      - items
      type: object
    ResponseServiceStack:
      properties:
        activeAppVersion:
          $ref: '#/components/schemas/GetAppVersion'
        buildCache:
          $ref: '#/components/schemas/BuildCache'
        connectedStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackConnectedServiceStack'
          type: array
        coreService:
          $ref: '#/components/schemas/ServiceStackLight'
        created:
          format: date-time
          type: string
        customAutoscaling:
          $ref: '#/components/schemas/CustomAutoscaling'
        customPortsEnabled:
          type: boolean
        githubIntegration:
          $ref: '#/components/schemas/GithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/GitlabIntegration'
        id:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        isSystem:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        mode:
          default: HA
          enum:
          - HA
          - NON_HA
          type: string
        name:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        ports:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServicePort'
          type: array
        project:
          $ref: '#/components/schemas/ProjectLight'
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        reloadAvailable:
          type: boolean
        requestedPorts:
          $ref: '#/components/schemas/RequestedPortsJsonObject'
        serviceStackTypeId:
          format: id
          type: string
        serviceStackTypeInfo:
          $ref: '#/components/schemas/ServiceStackInfoJsonObject'
        serviceStackTypeVersionId:
          format: id
          type: string
        startOnProjectStart:
          type: boolean
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - STOPPING
          - STOPPED
          - STARTING
          - RESTARTING
          - RELOADING
          - DELETING
          - DELETED
          - FAILED
          - ACTION_FAILED
          - UPGRADING
          - READY_TO_DEPLOY
          - SERVICE_CREATING
          - SERVICE_ACTIVE
          - SERVICE_STOPPING
          - SERVICE_STOPPED
          - SERVICE_STARTING
          - SERVICE_RESTARTING
          - SERVICE_RELOADING
          - SERVICE_DELETING
          - SERVICE_DELETED
          - SERVICE_FAILED
          - SERVICE_ACTION_FAILED
          - SERVICE_REPAIRING
          - SERVICE_CONTAINER_FAILED
          - SERVICE_MOVING_CONTAINER
          - SERVICE_UPGRADING
          - SERVICE_SCALING
          - SERVICE_REPAIR_FAILED
          - REPAIRING
          - CONTAINER_FAILED
          - MOVING_CONTAINER
          - SCALING
          - REPAIR_FAILED
          type: string
        subdomainAccess:
          type: boolean
        userData:
          format: objectArray
          items:
            $ref: '#/components/schemas/UserData'
          type: array
        versionNumber:
          format: emptyString
          type: string
      required:
      - id
      - name
      - serviceStackTypeInfo
      - serviceStackTypeId
      - serviceStackTypeVersionId
      - isSystem
      - startOnProjectStart
      - ports
      - requestedPorts
      - created
      - lastUpdate
      - customPortsEnabled
      - subdomainAccess
      - reloadAvailable
      - versionNumber
      - projectId
      - project
      - connectedStacks
      - userData
      type: object
    ResponseServiceStackBackup:
      properties:
        async:
          description: Indicates that backup took longer than 10 seconds and is running
            asynchronously in the background.
          type: boolean
        success:
          description: Indicates that Backup was successfully triggered and is finished
            or running in background, depending on value in `async`.
          type: boolean
      required:
      - success
      - async
      type: object
    ResponseServiceStackBackupFileList:
      properties:
        files:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackBackupFile'
          type: array
      required:
      - files
      type: object
    ResponseServiceStackDebug:
      properties:
        debugBuild:
          enum:
          - NONE
          - BEFORE
          - ON_FAIL
          - AFTER
          type: string
        debugRuntimePrepare:
          enum:
          - NONE
          - BEFORE
          - ON_FAIL
          - AFTER
          type: string
      required:
      - debugBuild
      - debugRuntimePrepare
      type: object
    ResponseServiceStackDiskGBytesUsed:
      properties:
        diskGBytesUsed:
          format: float
          type: number
        objects:
          format: int64
          type: integer
        rawPolicy:
          format: text
          type: string
      required:
      - diskGBytesUsed
      - objects
      - rawPolicy
      type: object
    ResponseServiceStackProcess:
      properties:
        activeAppVersion:
          $ref: '#/components/schemas/GetAppVersion'
        buildCache:
          $ref: '#/components/schemas/BuildCache'
        connectedStacks:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackConnectedServiceStack'
          type: array
        coreService:
          $ref: '#/components/schemas/ServiceStackLight'
        created:
          format: date-time
          type: string
        customAutoscaling:
          $ref: '#/components/schemas/CustomAutoscaling'
        customPortsEnabled:
          type: boolean
        githubIntegration:
          $ref: '#/components/schemas/GithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/GitlabIntegration'
        id:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        isSystem:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        mode:
          default: HA
          enum:
          - HA
          - NON_HA
          type: string
        name:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        ports:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServicePort'
          type: array
        process:
          $ref: '#/components/schemas/Process'
        project:
          $ref: '#/components/schemas/ProjectLight'
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        reloadAvailable:
          type: boolean
        requestedPorts:
          $ref: '#/components/schemas/RequestedPortsJsonObject'
        serviceStackTypeId:
          format: id
          type: string
        serviceStackTypeInfo:
          $ref: '#/components/schemas/ServiceStackInfoJsonObject'
        serviceStackTypeVersionId:
          format: id
          type: string
        startOnProjectStart:
          type: boolean
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - STOPPING
          - STOPPED
          - STARTING
          - RESTARTING
          - RELOADING
          - DELETING
          - DELETED
          - FAILED
          - ACTION_FAILED
          - UPGRADING
          - READY_TO_DEPLOY
          - SERVICE_CREATING
          - SERVICE_ACTIVE
          - SERVICE_STOPPING
          - SERVICE_STOPPED
          - SERVICE_STARTING
          - SERVICE_RESTARTING
          - SERVICE_RELOADING
          - SERVICE_DELETING
          - SERVICE_DELETED
          - SERVICE_FAILED
          - SERVICE_ACTION_FAILED
          - SERVICE_REPAIRING
          - SERVICE_CONTAINER_FAILED
          - SERVICE_MOVING_CONTAINER
          - SERVICE_UPGRADING
          - SERVICE_SCALING
          - SERVICE_REPAIR_FAILED
          - REPAIRING
          - CONTAINER_FAILED
          - MOVING_CONTAINER
          - SCALING
          - REPAIR_FAILED
          type: string
        subdomainAccess:
          type: boolean
        userData:
          format: objectArray
          items:
            $ref: '#/components/schemas/UserData'
          type: array
        versionNumber:
          format: emptyString
          type: string
      required:
      - id
      - name
      - serviceStackTypeInfo
      - serviceStackTypeId
      - serviceStackTypeVersionId
      - isSystem
      - startOnProjectStart
      - ports
      - requestedPorts
      - created
      - lastUpdate
      - customPortsEnabled
      - subdomainAccess
      - reloadAvailable
      - versionNumber
      - projectId
      - project
      - connectedStacks
      - userData
      - process
      type: object
    ResponseSettings:
      properties:
        currencyList:
          format: objectArray
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        languageList:
          format: objectArray
          items:
            $ref: '#/components/schemas/Language'
          type: array
        serviceStackList:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackType'
          type: array
      required:
      - currencyList
      - languageList
      - serviceStackList
      type: object
    ResponseSettingsCountryList:
      properties:
        list:
          format: objectArray
          items:
            $ref: '#/components/schemas/Country'
          type: array
      required:
      - list
      type: object
    ResponseSuccess:
      properties:
        success:
          type: boolean
      required:
      - success
      type: object
    ResponseTagList:
      properties:
        items:
          format: stringArray
          items:
            type: string
          type: array
      required:
      - items
      type: object
    ResponseUrl:
      properties:
        url:
          type: string
          format: uri
      required:
      - url
      type: object
    ResponseUser:
      properties:
        avatar:
          $ref: '#/components/schemas/UserAvatar'
        clientUserList:
          format: objectArray
          items:
            $ref: '#/components/schemas/ClientUserExtra'
          type: array
        countryCallingCode:
          format: int
          nullable: true
          type: integer
        created:
          format: date-time
          type: string
        email:
          format: email
          type: string
        firstName:
          type: string
        fullName:
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        language:
          $ref: '#/components/schemas/Language'
        lastName:
          format: emptyString
          type: string
        lastUpdate:
          format: date-time
          type: string
        phoneNumber:
          format: int
          nullable: true
          type: integer
        status:
          enum:
          - ACTIVE
          - DELETED
          type: string
      required:
      - id
      - email
      - fullName
      - firstName
      - lastName
      - language
      - created
      - lastUpdate
      - status
      - clientUserList
      type: object
    ResponseUserAuthorize:
      properties:
        avatar:
          $ref: '#/components/schemas/UserAvatar'
        clientUserList:
          format: objectArray
          items:
            $ref: '#/components/schemas/ClientUserExtra'
          type: array
        countryCallingCode:
          format: int
          nullable: true
          type: integer
        created:
          format: date-time
          type: string
        email:
          format: email
          type: string
        firstName:
          type: string
        fullName:
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        intercomHash:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        lastName:
          format: emptyString
          type: string
        lastUpdate:
          format: date-time
          type: string
        passwordIsSet:
          type: boolean
        phoneNumber:
          format: int
          nullable: true
          type: integer
        status:
          enum:
          - ACTIVE
          - DELETED
          type: string
      required:
      - id
      - email
      - fullName
      - firstName
      - lastName
      - language
      - created
      - lastUpdate
      - status
      - clientUserList
      - passwordIsSet
      - intercomHash
      type: object
    ResponseUserData:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackName:
          type: string
        type:
          default: SECRET
          description: Odfiltrovat záznamy userData.type == INTERNAL na výstupu /search
          enum:
          - READ_ONLY
          - EDITABLE
          - SECRET
          - INTERNAL
          - ENV
          type: string
      required:
      - id
      - created
      - lastUpdate
      - clientId
      - projectId
      - serviceStackId
      - key
      - content
      - serviceStackName
      type: object
    ResponseUserToken:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    ResponseVCSRepositoryBranchList:
      properties:
        branches:
          format: objectArray
          items:
            $ref: '#/components/schemas/VCSRepositoryBranch'
          type: array
      required:
      - branches
      type: object
    ResponseVCSRepositoryList:
      properties:
        repositories:
          format: objectArray
          items:
            $ref: '#/components/schemas/VCSRepository'
          type: array
      required:
      - repositories
      type: object
    ScalingMinFreeResource:
      properties:
        cpuCoreCount:
          format: float
          type: number
        cpuCorePercent:
          format: float
          type: number
        memoryGBytes:
          format: float
          type: number
        memoryPercent:
          format: float
          type: number
      required:
      - cpuCoreCount
      - cpuCorePercent
      - memoryGBytes
      - memoryPercent
      type: object
    ScalingMinFreeResourceNullable:
      properties:
        cpuCoreCount:
          format: float
          nullable: true
          type: number
        cpuCorePercent:
          format: float
          nullable: true
          type: number
        memoryGBytes:
          format: float
          nullable: true
          type: number
        memoryPercent:
          format: float
          nullable: true
          type: number
      type: object
    ScalingResource:
      properties:
        cpuCoreCount:
          format: int
          type: integer
        diskGBytes:
          format: float
          type: number
        memoryGBytes:
          format: float
          type: number
      required:
      - cpuCoreCount
      - memoryGBytes
      - diskGBytes
      type: object
    ScalingResourceNullable:
      properties:
        cpuCoreCount:
          format: int
          nullable: true
          type: integer
        diskGBytes:
          format: float
          nullable: true
          type: number
        memoryGBytes:
          format: float
          nullable: true
          type: number
      type: object
    ServicePort:
      properties:
        description:
          format: emptyString
          type: string
        port:
          format: int
          type: integer
        protocol:
          default: tcp
          enum:
          - tcp
          - udp
          type: string
        scheme:
          enum:
          - tcp
          - udp
          - http
          - https
          - redis
          - mysql
          - udpinflux
          - mongodb
          - postgresql
          - amqp
          - stomp
          - mqtt
          - nats
          type: string
        serviceId:
          description: = service.id in Zerops Infrastructure
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
      required:
      - port
      - description
      - scheme
      type: object
    ServiceStackBackupFile:
      properties:
        metadata:
          description: Map with both key and value of string type
          example: |-
            {
            "File_name": "backup-sharedstorage0-2024-07-01 10:17:07.tar.gz",
            "Stack_name": "sharedstorage0"
            }
          format: map
          type: object
        name:
          description: Name of the backup file in S3 (a date when it was taken)
          example: "2024-07-01 09:00:06"
          type: string
        path:
          description: Path to backup file inside S3 bucket (includes file name)
          example: mRF6FX3uRGiDUkKdKyEJdQ/2024-07-01 09:00:06
          type: string
        size:
          description: File size in bytes
          example: "399"
          format: int64
          type: integer
      required:
      - path
      - name
      - size
      - metadata
      type: object
    ServiceStackConnectedServiceStack:
      properties:
        serviceStack:
          $ref: '#/components/schemas/ServiceStackLight'
        status:
          default: CREATING
          enum:
          - CREATING
          - ACTIVE
          - DELETING
          type: string
      required:
      - serviceStack
      type: object
    ServiceStackInfoJsonObject:
      properties:
        serviceStackTypeCategory:
          default: CORE
          enum:
          - CORE
          - HTTP_L7_BALANCER
          - STANDARD
          - USER
          - SHARED_STORAGE
          - OBJECT_STORAGE
          - BUILD
          - INTERNAL
          - PREPARE_RUNTIME
          type: string
        serviceStackTypeName:
          type: string
        serviceStackTypeVersionName:
          type: string
      required:
      - serviceStackTypeName
      - serviceStackTypeVersionName
      type: object
    ServiceStackLight:
      properties:
        buildCache:
          $ref: '#/components/schemas/BuildCache'
        customAutoscaling:
          $ref: '#/components/schemas/CustomAutoscaling'
        githubIntegration:
          $ref: '#/components/schemas/GithubIntegration'
        gitlabIntegration:
          $ref: '#/components/schemas/GitlabIntegration'
        id:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        isSystem:
          type: boolean
        name:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        serviceStackTypeId:
          format: id
          type: string
        serviceStackTypeInfo:
          $ref: '#/components/schemas/ServiceStackInfoJsonObject'
        serviceStackTypeVersionId:
          format: id
          type: string
        startOnProjectStart:
          type: boolean
        status:
          default: NEW
          enum:
          - NEW
          - CREATING
          - ACTIVE
          - STOPPING
          - STOPPED
          - STARTING
          - RESTARTING
          - RELOADING
          - DELETING
          - DELETED
          - FAILED
          - ACTION_FAILED
          - UPGRADING
          - READY_TO_DEPLOY
          - SERVICE_CREATING
          - SERVICE_ACTIVE
          - SERVICE_STOPPING
          - SERVICE_STOPPED
          - SERVICE_STARTING
          - SERVICE_RESTARTING
          - SERVICE_RELOADING
          - SERVICE_DELETING
          - SERVICE_DELETED
          - SERVICE_FAILED
          - SERVICE_ACTION_FAILED
          - SERVICE_REPAIRING
          - SERVICE_CONTAINER_FAILED
          - SERVICE_MOVING_CONTAINER
          - SERVICE_UPGRADING
          - SERVICE_SCALING
          - SERVICE_REPAIR_FAILED
          - REPAIRING
          - CONTAINER_FAILED
          - MOVING_CONTAINER
          - SCALING
          - REPAIR_FAILED
          type: string
      required:
      - id
      - name
      - serviceStackTypeInfo
      - serviceStackTypeId
      - serviceStackTypeVersionId
      - isSystem
      - startOnProjectStart
      type: object
    ServiceStackLightJsonObject:
      properties:
        created:
          format: date-time
          type: string
        driverId:
          format: id
          nullable: true
          type: string
        id:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastUpdate:
          format: date-time
          type: string
        name:
          description: "hostname + ENV\n\t\tJako hostname + musí splňovat regulární
            výraz [a-zA-Z_]+[a-zA-Z0-9_]*\n\t\tcheck valid hostname\n\t\tif ( hostnameENV
            NOT IN  \"[a-zA-Z_]+[a-zA-Z0-9_]*\" ? ) then ( yes )\n\t\t\t: EXCEPTION
            400;\n\t\t\tstop;\n\t\tendif;"
          example: server1
          type: string
        ports:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServicePort'
          type: array
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackTypeId:
          format: id
          type: string
        serviceStackTypeInfo:
          $ref: '#/components/schemas/ServiceStackInfoJsonObject'
        serviceStackTypeVersionId:
          format: id
          type: string
      required:
      - id
      - created
      - lastUpdate
      - projectId
      - serviceStackTypeId
      - serviceStackTypeVersionId
      - name
      - serviceStackTypeInfo
      - ports
      type: object
    ServiceStackType:
      properties:
        category:
          default: CORE
          enum:
          - CORE
          - HTTP_L7_BALANCER
          - STANDARD
          - USER
          - SHARED_STORAGE
          - OBJECT_STORAGE
          - BUILD
          - INTERNAL
          - PREPARE_RUNTIME
          type: string
        created:
          format: date-time
          type: string
        description:
          format: text
          type: string
        id:
          format: id
          type: string
        lastUpdate:
          format: date-time
          type: string
        name:
          type: string
        serviceStackTypeVersionList:
          format: objectArray
          items:
            $ref: '#/components/schemas/ServiceStackTypeVersion'
          type: array
      required:
      - id
      - name
      - description
      - created
      - lastUpdate
      - serviceStackTypeVersionList
      type: object
    ServiceStackTypeVersion:
      properties:
        config:
          $ref: '#/components/schemas/ServiceStackTypeVersionConfig'
        created:
          format: date-time
          type: string
        description:
          format: text
          type: string
        exactVersionNumber:
          format: emptyString
          type: string
        haDriverId:
          format: id
          nullable: true
          type: string
        id:
          format: id
          type: string
        isBuild:
          type: boolean
        lastUpdate:
          format: date-time
          type: string
        name:
          type: string
        nonHaDriverId:
          format: id
          nullable: true
          type: string
        releaseDate:
          format: date-time
          type: string
        serviceStackTypeId:
          format: id
          type: string
        status:
          default: ACTIVE
          type: string
        versionNumber:
          format: emptyString
          type: string
      required:
      - id
      - name
      - isBuild
      - serviceStackTypeId
      - releaseDate
      - created
      - lastUpdate
      - description
      - versionNumber
      - exactVersionNumber
      - config
      type: object
    ServiceStackTypeVersionConfig:
      properties:
        defaultAutoscaling:
          $ref: '#/components/schemas/CustomAutoscaling'
        defaultWebserverConfig:
          nullable: true
          type: string
        horizontalAutoscaling:
          $ref: '#/components/schemas/HorizontalAutoscaling'
        verticalAutoscaling:
          $ref: '#/components/schemas/VerticalAutoscaling'
      type: object
    ServiceStackTypeVersionLight:
      properties:
        id:
          format: id
          type: string
        isBuild:
          type: boolean
        name:
          type: string
        releaseDate:
          format: date-time
          type: string
        serviceStackTypeId:
          format: id
          type: string
        status:
          default: ACTIVE
          type: string
        updateUrl:
          format: uri
          type: string
      required:
      - id
      - serviceStackTypeId
      - name
      - isBuild
      - updateUrl
      - releaseDate
      type: object
    User:
      properties:
        avatar:
          $ref: '#/components/schemas/UserAvatar'
        clientUserList:
          format: objectArray
          items:
            $ref: '#/components/schemas/ClientUserExtra'
          type: array
        countryCallingCode:
          format: int
          nullable: true
          type: integer
        created:
          format: date-time
          type: string
        email:
          format: email
          type: string
        firstName:
          type: string
        fullName:
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        language:
          $ref: '#/components/schemas/Language'
        lastName:
          format: emptyString
          type: string
        lastUpdate:
          format: date-time
          type: string
        phoneNumber:
          format: int
          nullable: true
          type: integer
        status:
          enum:
          - ACTIVE
          - DELETED
          type: string
      required:
      - id
      - email
      - fullName
      - firstName
      - lastName
      - language
      - created
      - lastUpdate
      - status
      - clientUserList
      type: object
    UserAvatar:
      properties:
        externalAvatarUrl:
          nullable: true
          type: string
          format: uri
        largeAvatarUrl:
          nullable: true
          type: string
          format: uri
        smallAvatarUrl:
          nullable: true
          type: string
          format: uri
      type: object
    UserData:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        serviceStackName:
          type: string
        type:
          default: SECRET
          description: Odfiltrovat záznamy userData.type == INTERNAL na výstupu /search
          enum:
          - READ_ONLY
          - EDITABLE
          - SECRET
          - INTERNAL
          - ENV
          type: string
      required:
      - id
      - created
      - lastUpdate
      - clientId
      - projectId
      - serviceStackId
      - key
      - content
      - serviceStackName
      type: object
    UserDataLight:
      properties:
        clientId:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        created:
          format: date-time
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
        lastUpdate:
          format: date-time
          type: string
        projectId:
          description: = instance.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        sensitive:
          type: boolean
        serviceStackId:
          description: = stack.id in Zerops Infrastructure
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        type:
          default: SECRET
          description: Odfiltrovat záznamy userData.type == INTERNAL na výstupu /search
          enum:
          - READ_ONLY
          - EDITABLE
          - SECRET
          - INTERNAL
          - ENV
          type: string
      required:
      - id
      - clientId
      - projectId
      - serviceStackId
      - key
      - content
      - created
      - lastUpdate
      - sensitive
      type: object
    UserDataPut:
      properties:
        content:
          description: maximálně 8192 znaků, pouze ASCII znaky bez CR a LF
          example: a=1
          format: text
          type: string
        key:
          description: "Musí splňovat regulár [a-zA-Z_]+[a-zA-Z0-9_]* \n\t\t\tJinak
            stejné požadavky, jako jsou na pole NAME v doménovém záznamu\t\t\t\n\n\t\t\tif
            ( domainName NOT ENDS WITH \".\" ? ) then (yes)\n\t\t\t   : domainName
            = inputDomainName || \".\";\n\t\t\tendif;\n\t\t\t\n\t\t\tif ( domainRecord.name
            CONTAINS \"..\" ? ) then ( yes )\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(domainRecord.name > 255)\n\t\t\t   : EXCEPTION 400;\n\t\t\t   stop;\n\t\t\tendif;\n\t\t\t\n\t\t\tif
            ( length(BETWEEN \".\" AND \".\" domainRecord.name > 63)\n\t\t\t   : EXCEPTION
            400;\n\t\t\t   stop;\n\t\t\tendif;"
          example: server1
          type: string
      required:
      - key
      - content
      type: object
    UserJsonObject:
      properties:
        avatar:
          $ref: '#/components/schemas/UserAvatar'
        email:
          format: email
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        id:
          format: UUIDShort
          nullable: true
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        type:
          enum:
          - GITHUB
          - GITLAB
          - USER
          - SYSTEM
          type: string
      required:
      - type
      type: object
    UserLight:
      properties:
        avatar:
          $ref: '#/components/schemas/UserAvatar'
        email:
          format: email
          type: string
        firstName:
          type: string
        fullName:
          type: string
        id:
          format: UUIDShort
          pattern: ^[a-zA-Z0-9]{22}$
          type: string
        lastName:
          format: emptyString
          type: string
      required:
      - id
      - email
      - fullName
      - firstName
      - lastName
      type: object
    VCSRepository:
      properties:
        admin:
          type: boolean
        fullName:
          type: string
        name:
          type: string
        owner:
          type: string
        ownerUrl:
          type: string
          format: uri
        visibility:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
      required:
      - name
      - fullName
      - visibility
      - owner
      - ownerUrl
      - admin
      type: object
    VCSRepositoryBranch:
      properties:
        isDefault:
          type: boolean
        name:
          type: string
      required:
      - name
      - isDefault
      type: object
    VerticalAutoscaling:
      properties:
        cpuMode:
          default: SHARED
          enum:
          - DEDICATED
          - SHARED
          type: string
        maxResource:
          $ref: '#/components/schemas/ScalingResource'
        minFreeResource:
          $ref: '#/components/schemas/ScalingMinFreeResource'
        minResource:
          $ref: '#/components/schemas/ScalingResource'
        startCpuCoreCount:
          format: int
          type: integer
      required:
      - maxResource
      - minResource
      - minFreeResource
      - startCpuCoreCount
      type: object
    VerticalAutoscalingNullable:
      properties:
        cpuMode:
          default: SHARED
          enum:
          - DEDICATED
          - SHARED
          nullable: true
          type: string
        maxResource:
          $ref: '#/components/schemas/ScalingResourceNullable'
        minFreeResource:
          $ref: '#/components/schemas/ScalingMinFreeResourceNullable'
        minResource:
          $ref: '#/components/schemas/ScalingResourceNullable'
        startCpuCoreCount:
          format: int
          nullable: true
          type: integer
      type: object
    VpnConfig:
      properties:
        endpoint:
          type: string
        network:
          $ref: '#/components/schemas/VpnNetworkConfig'
        sharedEndpoint:
          type: string
      required:
      - network
      - sharedEndpoint
      - endpoint
      type: object
    VpnIpConfig:
      properties:
        assignedIpAddress:
          type: string
        network:
          $ref: '#/components/schemas/VpnNetworkConfig'
      required:
      - network
      - assignedIpAddress
      type: object
    VpnNetworkConfig:
      properties:
        gateway:
          type: string
        network:
          type: string
      required:
      - network
      - gateway
      type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

info:
  contact:
    email: dev@zerops.io
  description: OpenAPI 3.0.0 documentation for Zerops project ZeropsBusiness.
  license:
    name: Zerops client licence
    url: https://www.zerops.io
  title: Zerops public REST API schema
  version: 7f6547eb53c6395b2835f392244aefdb
openapi: 3.0.0
paths:
  /api/rest/public/app-version:
    post:
      operationId: 8c6aa9e2-1989-4e3b-ad7e-6d546e0b82de
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostAppVersion'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePostAppVersion'
          description: Success response
      tags:
      - PublicAppVersion
  /api/rest/public/app-version/{id}:
    delete:
      operationId: 967b327a-e7f0-4191-92e2-1c835a370907
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicAppVersion
    get:
      operationId: 708d0ca5-55c3-405b-9185-c6d45195fff5
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetAppVersion'
          description: Success response
      tags:
      - PublicAppVersion
    put:
      description: update app version
      operationId: c5cebaff-aa57-4c2f-b194-bb8574804f12
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutAppVersion'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicAppVersion
  /api/rest/public/app-version/{id}/app-code:
    get:
      operationId: f9bb3a42-4dc7-4a96-823d-c2321eddfcda
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUrl'
          description: Success response
      tags:
      - PublicAppVersion
  /api/rest/public/app-version/{id}/build-and-deploy:
    put:
      operationId: 591315ef-b9d1-4b17-8a46-61baf1ab8bd6
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutAppVersionBuildAndDeploy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicAppVersion
  /api/rest/public/app-version/{id}/cancel-build:
    put:
      operationId: 999700e5-26eb-4237-9ad8-9ebb9074221b
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicAppVersion
  /api/rest/public/app-version/{id}/deploy:
    put:
      operationId: 19953869-a72a-4225-a4ec-19e380e6f33e
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutAppVersionDeploy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicAppVersion
  /api/rest/public/app-version/{token}/app-code-download:
    get:
      operationId: 439e454a-e5f9-4f2e-9830-ff8e4c5af3e1
      parameters:
      - $ref: '#/components/parameters/token'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFileDownload'
          description: Success response
      tags:
      - PublicAppVersion
  /api/rest/public/app-version/download/{id}:
    get:
      operationId: app-versionSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/app-version/search:
    post:
      operationId: app-versionSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsAppVersionResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/app-version/search/columns:
    get:
      operationId: app-versionSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/app-version/search/export:
    post:
      operationId: app-versionSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/app-version/search/names:
    get:
      operationId: app-versionSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/app-version/suggest:
    post:
      operationId: app-versionSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/auth/info:
    get:
      description: Načtení objektu user na základě refreshToken.
      operationId: b8b70b38-c484-4f7f-b79e-cde6a87aaa9e
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuth'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                noAccessToZerops:
                  $ref: '#/components/examples/ErrornoAccessToZerops'
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicAuth
  /api/rest/public/auth/login:
    post:
      description: Uživatel na GUI zadá v přihlašovacím formuláři e-mail a heslo.
        Po příchodu vstupních údajů se vyvolá požadavek na IS Private API, která vrátí
        informaci o úspěchu přihlášení. V případě, že došlo k úspěšnému ověření hesla
        v IS, přečtou se na základě vráceného userId informace z ElasticSearch a uloží
        objekty auth a user do Redisu a vrátí tokeny v odpovědi.
      operationId: 5fc946a4-0c8a-4d89-8cd1-fe3346e5ac33
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAuth'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuthLogin'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicAuth
  /api/rest/public/auth/logout:
    post:
      description: Uživatel na GUI kliknul na "odhlásit". Ze session storage jsou
        dohledány tokeny Access a Refresh. Tyto tokeny jsou zaslány službě, která
        smaže příslušné klíče a klíč s userId z Redisu. Dále vyčistí session storage
        prohlížeče. V opačném případě se chyba záměrně nehlásí, protože uživatel už
        byl stejně odhlášen.
      operationId: 3bfeb755-f821-4129-b69e-584a306ce408
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicAuth
  /api/rest/public/auth/refresh:
    post:
      description: AccessToken vrácený při loginu uživatele expiroval a GUI se pokusí
        získat nový auth objekt na základě zaslaného refreshTokenu (platnost tokenů
        se dle standardu oAuth 2.0 neprodlužuje). Pokud je refreshToken platný, API
        smaže původní záznam z auth a vygeneruje záznam nový, který předá na výstup
        stejným způsobem jako při přihlášení uživatele. V případě úspěšného obnovení
        tokenů se nový záznam uloží do Redisu.
      operationId: 30eeffde-9846-41a7-8826-d6da85acf08b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAuthRefresh'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuth'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                noAccessToZerops:
                  $ref: '#/components/examples/ErrornoAccessToZerops'
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
                userNotFound:
                  $ref: '#/components/examples/ErroruserNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                refreshTokenInvalid:
                  $ref: '#/components/examples/ErrorrefreshTokenInvalid'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicAuth
  /api/rest/public/avatar:
    delete:
      description: Smaže avatara přihlášeného uživatele
      operationId: 7371be20-81f8-4c52-8f5f-0cae24409341
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicAvatar
    put:
      description: Nahraje avatara přihlášeného uživatele
      operationId: b5e1d655-1227-4201-8d79-a409af2ecada
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicAvatar
  /api/rest/public/billing/addon/{id}:
    put:
      operationId: f982f48b-9c2a-443f-afb5-c692db0b2510
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutBillingAddon'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicBilling
  /api/rest/public/billing/client/{id}/autocharge-options:
    put:
      description: change clients payment options
      operationId: b1bb3ebe-2f26-4c0b-9ffb-1d35523c84ea
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutBillingClientAutocharge'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicBilling
  /api/rest/public/billing/client/{id}/available-addons:
    get:
      operationId: 11089843-1f7a-4a76-9f23-153b9a798166
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAvailableAddons'
          description: Success response
      tags:
      - PublicBilling
  /api/rest/public/billing/client/{id}/payment-source:
    delete:
      operationId: 3ad93584-cd68-46b6-b8d1-9a1917de5a44
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDeleteBillingClientPaymentSource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicBilling
    get:
      operationId: 1875b7a5-de4d-4463-b727-8e2fa4f9432c
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePaymentSources'
          description: Success response
      tags:
      - PublicBilling
    post:
      operationId: 3b706747-7f19-48a1-840c-93de97ea64b1
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientSecret'
          description: Success response
      tags:
      - PublicBilling
  /api/rest/public/billing/client/{id}/status:
    get:
      operationId: 869316b5-86dd-4964-ba5c-9f669759ff7a
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientStatus'
          description: Success response
      tags:
      - PublicBilling
  /api/rest/public/billing/payment:
    post:
      description: create payment
      operationId: 56765f6b-c5d6-4b92-9f46-0ccfe802633b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostBillingPayment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePostBilling'
          description: Success response
      tags:
      - PublicBilling
  /api/rest/public/card-payment/{id}/invoice:
    get:
      description: Vrátí údaje k faktuře.
      operationId: 3560149b-728a-453d-b1dd-e415ddae9e82
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/languageId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseInvoice'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                invoiceNotFound:
                  $ref: '#/components/examples/ErrorinvoiceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicPayment
  /api/rest/public/card-payment/{id}/invoice/pdf:
    get:
      description: Vrátí url pro stažení PDF faktury.
      operationId: e485b686-a865-46f8-b97f-5d13008f64c7
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/languageId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUrl'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                invoiceNotFound:
                  $ref: '#/components/examples/ErrorinvoiceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicPayment
  /api/rest/public/card-payment/download/{id}:
    get:
      operationId: card-paymentSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/card-payment/invoice/file/{token}:
    get:
      description: Vrátí PDF soubor faktury
      operationId: 01f981ba-89eb-4dcf-b3d7-ba1758a2aafa
      parameters:
      - $ref: '#/components/parameters/token'
      - $ref: '#/components/parameters/preview'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFileDownload'
          description: Success response
        "403":
          content:
            application/json:
              examples:
                downloadTokenInvalidOrExpired:
                  $ref: '#/components/examples/ErrordownloadTokenInvalidOrExpired'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                invoiceNotFound:
                  $ref: '#/components/examples/ErrorinvoiceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicPayment
  /api/rest/public/card-payment/search:
    post:
      operationId: card-paymentSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsCardPaymentResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/card-payment/search/columns:
    get:
      operationId: card-paymentSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/card-payment/search/export:
    post:
      operationId: card-paymentSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/card-payment/search/names:
    get:
      operationId: card-paymentSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/card-payment/stripe-webhook:
    post:
      operationId: cc0cb52a-a37c-4b68-92a0-b5ae04ef7f43
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestStripeWebhook'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicPayment
  /api/rest/public/card-payment/suggest:
    post:
      operationId: card-paymentSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-user:
    post:
      description: Založí nového uživatele v DB IS.
      operationId: 396fa542-b95c-459b-a6e1-02903ec9f5c5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientUserExtra'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidPhoneNumber:
                  $ref: '#/components/examples/ErrorinvalidPhoneNumber'
                invalidUserRole:
                  $ref: '#/components/examples/ErrorinvalidUserRole'
                languageNotFound:
                  $ref: '#/components/examples/ErrorlanguageNotFound'
                maximumNumberOfClientExceeded:
                  $ref: '#/components/examples/ErrormaximumNumberOfClientExceeded'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicClientUser
  /api/rest/public/client-user/{id}:
    delete:
      description: Zruší vazbu mezi klientem a uživatelem
      operationId: f2567347-099e-4fec-9020-bd3b6a6a6129
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientUserExtra'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                clientUserAlreadyBeenDeleted:
                  $ref: '#/components/examples/ErrorclientUserAlreadyBeenDeleted'
                clientUserConnectionNotFound:
                  $ref: '#/components/examples/ErrorclientUserConnectionNotFound'
                unableToDeleteYourOwnAccount:
                  $ref: '#/components/examples/ErrorunableToDeleteYourOwnAccount'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicClientUser
    get:
      description: Vrátí objekt clientUserExtra z ElasticSearch.
      operationId: 9cab21eb-0200-451d-942e-2024d46404fb
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientUserExtra'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicClientUser
    put:
      description: Upraví vazbu mezi klientem a uživatelem
      operationId: 1d1b4e2f-9b7c-4203-ba72-d6d1ee5aaea5
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestClientUserConnection'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientUserExtra'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidPhoneNumber:
                  $ref: '#/components/examples/ErrorinvalidPhoneNumber'
                languageNotFound:
                  $ref: '#/components/examples/ErrorlanguageNotFound'
                recordNotFound:
                  $ref: '#/components/examples/ErrorrecordNotFound'
                unableToEditDeletedUser:
                  $ref: '#/components/examples/ErrorunableToEditDeletedUser'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicClientUser
  /api/rest/public/client-user/{id}/restore:
    put:
      description: Obnoví vazbu mezi klientem a uživatelem
      operationId: 686e3c54-1395-4565-9874-114a156c0552
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientUserExtra'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                recordNotFound:
                  $ref: '#/components/examples/ErrorrecordNotFound'
                userIsNotInBeingDeletedStatus:
                  $ref: '#/components/examples/ErroruserIsNotInBeingDeletedStatus'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicClientUser
  /api/rest/public/client-user/download/{id}:
    get:
      operationId: client-userSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-user/search:
    post:
      operationId: client-userSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsClientUserResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-user/search/columns:
    get:
      operationId: client-userSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-user/search/export:
    post:
      operationId: client-userSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-user/search/names:
    get:
      operationId: client-userSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-user/suggest:
    post:
      operationId: client-userSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-user/validate:
    post:
      description: Provede kontrolu možnosti připojení uživatele ke klientovi.
      operationId: 9bc85a3b-ed72-4fdb-a17f-f75297366814
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestClientUserValidate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseClientUserValidate'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                userAccountNotFound:
                  $ref: '#/components/examples/ErroruserAccountNotFound'
                userAlreadyConnectedToCompany:
                  $ref: '#/components/examples/ErroruserAlreadyConnectedToCompany'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicClientUser
  /api/rest/public/client-version/download/{id}:
    get:
      operationId: client-versionSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-version/search:
    post:
      operationId: client-versionSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsCardPaymentResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-version/search/columns:
    get:
      operationId: client-versionSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-version/search/export:
    post:
      operationId: client-versionSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-version/search/names:
    get:
      operationId: client-versionSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client-version/suggest:
    post:
      operationId: client-versionSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client/{id}/account-info:
    put:
      operationId: 1bc6a952-b248-454c-a75f-586277f41dbc
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutClientAccountInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicClient
  /api/rest/public/client/{id}/avatar:
    delete:
      description: delete client avatar
      operationId: e1cf3fbb-7408-4e37-a6da-e38edf3b451f
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicClient
    put:
      description: update client avatar
      operationId: 28101e60-30c1-4b32-909a-88c9ff06a1ff
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicClient
  /api/rest/public/client/{id}/billing-info:
    get:
      operationId: 5773f1ad-f9d6-4c42-b742-0457ddccbf44
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetBilling'
          description: Success response
      tags:
      - PublicClient
    put:
      operationId: 5773f1ad-f9d6-4c42-b742-0457ddccbf02
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutClientBillingInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetBilling'
          description: Success response
      tags:
      - PublicClient
  /api/rest/public/client/check-vat-number:
    post:
      operationId: 8a04873f-ac41-433b-b4ba-d092ed209030
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostClientCheckVAT'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicClient
  /api/rest/public/client/download/{id}:
    get:
      operationId: clientSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client/search:
    post:
      operationId: clientSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsClientResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client/search/columns:
    get:
      operationId: clientSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client/search/export:
    post:
      operationId: clientSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client/search/names:
    get:
      operationId: clientSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/client/suggest:
    post:
      operationId: clientSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/container/download/{id}:
    get:
      operationId: containerSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/container/search:
    post:
      operationId: containerSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsContainerResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/container/search/columns:
    get:
      operationId: containerSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/container/search/export:
    post:
      operationId: containerSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/container/search/names:
    get:
      operationId: containerSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/container/suggest:
    post:
      operationId: containerSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/country/download/{id}:
    get:
      operationId: countrySearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/country/search:
    post:
      operationId: countrySearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsCountryResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/country/search/columns:
    get:
      operationId: countrySearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/country/search/export:
    post:
      operationId: countrySearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/country/search/names:
    get:
      operationId: countrySearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/country/suggest:
    post:
      operationId: countrySuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/currency/download/{id}:
    get:
      operationId: currencySearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/currency/search:
    post:
      operationId: currencySearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsCurrencyResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/currency/search/columns:
    get:
      operationId: currencySearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/currency/search/export:
    post:
      operationId: currencySearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/currency/search/names:
    get:
      operationId: currencySearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/currency/suggest:
    post:
      operationId: currencySuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/github/auth-url:
    get:
      description: Vrátí URL pro autorizaci uživatele v GitHubu. Veřejný endpoint,
        neobsahuje accessToken na vstupu.
      operationId: 5fc946a4-0c8a-4d89-8cd1-fe3346e5ac11
      parameters:
      - $ref: '#/components/parameters/redirectUrl'
      - $ref: '#/components/parameters/action'
      - $ref: '#/components/parameters/haRecipe'
      - $ref: '#/components/parameters/nonHaRecipe'
      - $ref: '#/components/parameters/email'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGithubAuth'
          description: Success response
      tags:
      - PublicGithub
  /api/rest/public/github/repository:
    get:
      description: Načte seznam repozitářů přihlášeného uživatele.
      operationId: 61f99cb0-c4da-4bb0-8016-19425bcfdab0
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseVCSRepositoryList'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                githubAuthorizationRequired:
                  $ref: '#/components/examples/ErrorgithubAuthorizationRequired'
                githubRequestFailed:
                  $ref: '#/components/examples/ErrorgithubRequestFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGithub
  /api/rest/public/github/repository-branch:
    get:
      description: Načte seznam branches daného repozitáře.
      operationId: 8849c943-675f-40e7-b586-ef265ea5e264
      parameters:
      - $ref: '#/components/parameters/repositoryFullName'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseVCSRepositoryBranchList'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                githubAuthorizationRequired:
                  $ref: '#/components/examples/ErrorgithubAuthorizationRequired'
                githubRequestFailed:
                  $ref: '#/components/examples/ErrorgithubRequestFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGithub
  /api/rest/public/github/user-login:
    post:
      description: Provede login uživatele na základě předchozí autorizace v GitHubu.
        Veřejný endpoint, neobsahuje accessToken na vstupu.
      operationId: b2c99184-2ee9-4055-8234-abb005505237
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGithubAuth'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuthLogin'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                githubVerificationExpired:
                  $ref: '#/components/examples/ErrorgithubVerificationExpired'
                invalidGithubTokenAction:
                  $ref: '#/components/examples/ErrorinvalidGithubTokenAction'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGithub
  /api/rest/public/github/user-registration:
    post:
      description: Provede registraci uživatele na základě předchozí autorizace v
        GitHubu. Veřejný endpoint, neobsahuje accessToken na vstupu.
      operationId: c50691f3-a05b-48b3-8b91-7213437c518c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGithubAuth'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuthLogin'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                githubVerificationExpired:
                  $ref: '#/components/examples/ErrorgithubVerificationExpired'
                invalidGithubTokenAction:
                  $ref: '#/components/examples/ErrorinvalidGithubTokenAction'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGithub
  /api/rest/public/github/user-repository-access:
    post:
      description: Provede autorizaci k repozitářům uživatele na základě předchozí
        autorizace v GitHubu.
      operationId: 31f05fc9-2da9-4a08-8b58-f01973f179fc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGithubAuth'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                githubAuthorizationRequired:
                  $ref: '#/components/examples/ErrorgithubAuthorizationRequired'
                githubRequestFailed:
                  $ref: '#/components/examples/ErrorgithubRequestFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGithub
  /api/rest/public/gitlab/auth-url:
    get:
      description: Vrátí URL pro autorizaci uživatele v Gitlabu. Veřejný endpoint,
        neobsahuje accessToken na vstupu.
      operationId: e8d092de-a2b9-4ba7-a81f-2e6987e416a4
      parameters:
      - $ref: '#/components/parameters/redirectUrl'
      - $ref: '#/components/parameters/action'
      - $ref: '#/components/parameters/haRecipe'
      - $ref: '#/components/parameters/nonHaRecipe'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGitlabAuth'
          description: Success response
      tags:
      - PublicGitlab
  /api/rest/public/gitlab/repository:
    get:
      description: Načte seznam repozitářů přihlášeného uživatele.
      operationId: 0ffe57b4-db5b-4174-93b5-5aa065831936
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseVCSRepositoryList'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                gitlabAuthorizationRequired:
                  $ref: '#/components/examples/ErrorgitlabAuthorizationRequired'
                gitlabRequestFailed:
                  $ref: '#/components/examples/ErrorgitlabRequestFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGitlab
  /api/rest/public/gitlab/repository-branch:
    get:
      description: Načte seznam branches daného repozitáře.
      operationId: 2181a532-a316-42cd-a0ec-d373fe25cd7f
      parameters:
      - $ref: '#/components/parameters/repositoryFullName'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseVCSRepositoryBranchList'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                gitlabAuthorizationRequired:
                  $ref: '#/components/examples/ErrorgitlabAuthorizationRequired'
                gitlabRequestFailed:
                  $ref: '#/components/examples/ErrorgitlabRequestFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGitlab
  /api/rest/public/gitlab/user-login:
    post:
      description: Provede login uživatele na základě předchozí autorizace v Gitlabu.
        Veřejný endpoint, neobsahuje accessToken na vstupu.
      operationId: 9c9824f3-5fe3-4955-8a5b-dc7bb6f4e28e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGitlabAuth'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuthLogin'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                gitlabVerificationExpired:
                  $ref: '#/components/examples/ErrorgitlabVerificationExpired'
                invalidGitlabTokenAction:
                  $ref: '#/components/examples/ErrorinvalidGitlabTokenAction'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGitlab
  /api/rest/public/gitlab/user-registration:
    post:
      description: Provede registraci uživatele na základě předchozí autorizace v
        Gitlabu. Veřejný endpoint, neobsahuje accessToken na vstupu.
      operationId: f5bd8598-27e6-4964-8af0-05f6a4f78423
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGitlabAuth'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuthLogin'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                gitlabVerificationExpired:
                  $ref: '#/components/examples/ErrorgitlabVerificationExpired'
                invalidGitlabTokenAction:
                  $ref: '#/components/examples/ErrorinvalidGitlabTokenAction'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGitlab
  /api/rest/public/gitlab/user-repository-access:
    post:
      description: Provede autorizaci k repozitářům uživatele na základě předchozí
        autorizace v Gitlabu.
      operationId: f4dcdae8-a1ed-4dd8-ab5c-3b777ac8234e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGitlabAuth'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                gitlabAuthorizationRequired:
                  $ref: '#/components/examples/ErrorgitlabAuthorizationRequired'
                gitlabRequestFailed:
                  $ref: '#/components/examples/ErrorgitlabRequestFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicGitlab
  /api/rest/public/language/download/{id}:
    get:
      operationId: languageSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/language/search:
    post:
      operationId: languageSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsLanguageResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/language/search/columns:
    get:
      operationId: languageSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/language/search/export:
    post:
      operationId: languageSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/language/search/names:
    get:
      operationId: languageSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/language/suggest:
    post:
      operationId: languageSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/process/{id}:
    get:
      description: Vrátí informaci o zvoleném procesu.
      operationId: 03f82684-de22-4bd8-b1a7-83622d2fea02
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProcess
  /api/rest/public/process/{id}/cancel:
    put:
      description: Stornování processu uživatele.
      operationId: 868cc8ec-6f34-4f31-b576-6c4cd6c8bb07
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                processIsAlreadyOver:
                  $ref: '#/components/examples/ErrorprocessIsAlreadyOver'
                processIsAlreadyRunning:
                  $ref: '#/components/examples/ErrorprocessIsAlreadyRunning'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProcess
  /api/rest/public/process/download/{id}:
    get:
      operationId: processSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/process/search:
    post:
      operationId: processSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsProcessResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/process/search/columns:
    get:
      operationId: processSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/process/search/export:
    post:
      operationId: processSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/process/search/names:
    get:
      operationId: processSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/process/suggest:
    post:
      operationId: processSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/project:
    post:
      description: Založí projekt v Zerops Business
      operationId: 512a3009-5465-4b10-9cc1-2b138d495ca0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostProject'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProject'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProject
  /api/rest/public/project-env:
    post:
      description: Založení nového záznamu projectEnv.
      operationId: 3777c612-b2dd-4e98-94aa-2167d61ddf98
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestProjectEnvPost'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProjectEnv
  /api/rest/public/project-env/{id}:
    delete:
      operationId: aed37098-98d5-43f1-9318-7d632cdb9c0f
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProjectEnv
    get:
      description: Vrátí informace o projectEnv.
      operationId: 07757d35-5b9a-46b2-bc16-0cd2ffffab0b
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectEnv'
          description: Success response
      tags:
      - PublicProjectEnv
    put:
      operationId: 8f009e2b-e679-46c4-bc78-c93dcfb86908
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestProjectEnvPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProjectEnv
  /api/rest/public/project-env/env-file:
    put:
      operationId: 0ee82d84-79e4-4348-bba3-3963b76a3b1b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestProjectEnvPutEnvFile'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProjectEnv
  /api/rest/public/project/{id}:
    delete:
      operationId: b6eed90e-4967-409d-8db1-327e209517b8
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProject
    get:
      operationId: 44e2c791-1b06-4e1a-bc80-cfc07d2da66d
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProject'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProject
    put:
      description: Upraví projekt v Zerops Business
      operationId: deb3d292-1d49-4bb4-8a57-900294242edf
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutProject'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProject'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/export:
    get:
      description: exports project configuration into yaml format
      operationId: f46d0788-78e1-43ff-ac7a-ed9a7ee3a293
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectExport'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/log:
    get:
      operationId: 1ca9e5bf-3c11-49e0-929f-8e184d55583d
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectLog'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/remote-logging:
    put:
      description: Configures remote logging of project logger container
      operationId: d181d0f7-d8dc-4c44-a881-05a7892c2657
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutProjectRemoteLogging'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/request-ipv4:
    put:
      description: Založení zádosti o IPv4 v Zerops Business
      operationId: 47e0e235-d40e-4b2b-9ab5-fef07caa064f
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/revert-changes-public-http-routing:
    put:
      description: Revert http routing changes
      operationId: ddf990aa-5e86-45f0-9568-d280c6e7ca80
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/revert-changes-public-port-routing:
    put:
      description: Revert port routing changes
      operationId: e91b136a-c8bc-4cdb-a4c9-67143878aaf9
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/start:
    put:
      operationId: 21fe8cef-af9a-493c-b463-72859193233d
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/stop:
    put:
      operationId: 2c8a514d-04ac-4058-a694-6522a8c8c62b
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/sync-public-http-routing:
    put:
      description: Synchronizuje http routing
      operationId: 87c566d5-1eda-421a-9cac-4a322cc57e0b
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/sync-public-port-routing:
    put:
      description: Synchronizuje port routing
      operationId: c3429771-7a66-4cc4-86b8-96aa74d0a69e
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/vpn:
    delete:
      description: delete vpn public key
      operationId: 89836a45-0cd3-44e8-8f90-5a9d8124c8a1
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostProjectVpn'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicProject
    post:
      description: create vpn public key setup
      operationId: ce011f55-97cd-4510-af51-219e695aaccb
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostProjectVpn'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectVpnItem'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/vpn/{base64PublicKey}:
    get:
      description: get public key vpn setup
      operationId: 44741d7f-6518-46ce-98a3-fd5391c4cb71
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/base64PublicKey'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectVpnItem'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/{id}/vpn/list:
    get:
      description: get public key vpn setup
      operationId: ada46fbe-3bbd-412c-9050-77b76cf2e764
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectVpnList'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/download/{id}:
    get:
      operationId: projectSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/project/import:
    post:
      description: creates project based on it´s yaml format configuration
      operationId: 117d9300-f66b-41f0-b639-e190f610a5d5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestProjectImport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectImport'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/project/search:
    post:
      operationId: projectSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsProjectResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/project/search/columns:
    get:
      operationId: projectSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/project/search/export:
    post:
      operationId: projectSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/project/search/names:
    get:
      operationId: projectSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/project/suggest:
    post:
      operationId: projectSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/project/tag/list:
    post:
      description: Vypíše všechny tagy použité na všech klientových projektech
      operationId: 2a4e1f87-4655-4c72-8723-9d98b336a133
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostProjectTagList'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTagList'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/projects-by-name/{name}:
    get:
      operationId: b7e020a5-3e10-42b5-9958-dce9542e6d94
      parameters:
      - $ref: '#/components/parameters/name'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetProjectsByName'
          description: Success response
      tags:
      - PublicProject
  /api/rest/public/public-http-routing:
    post:
      description: Založí public http routing
      operationId: 56902644-f38a-4181-a914-4f7f788e3dd9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPublicHttpRoutingPost'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicHttpRouting'
          description: Success response
      tags:
      - PublicPublicHttpRouting
  /api/rest/public/public-http-routing/{id}:
    delete:
      description: Vrátí public http routing
      operationId: 3de4a004-edd7-4c22-b99e-aa9d056dcc15
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeletePublicHttpRouting'
          description: Success response
      tags:
      - PublicPublicHttpRouting
    get:
      description: Vrátí public http routing
      operationId: e5fca625-c09a-4951-9da3-ef7a6790c0c5
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicHttpRouting'
          description: Success response
      tags:
      - PublicPublicHttpRouting
    put:
      description: Edituje public http routing
      operationId: 2df216c6-6461-4b93-8d9f-d8b14da3f14c
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPublicHttpRoutingPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicHttpRouting'
          description: Success response
      tags:
      - PublicPublicHttpRouting
  /api/rest/public/public-http-routing/{id}/restore:
    put:
      description: Obnoví public http routing
      operationId: 5e151eee-b3de-47f4-a544-cdda5f7d8992
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicHttpRouting'
          description: Success response
      tags:
      - PublicPublicHttpRouting
  /api/rest/public/public-http-routing/download/{id}:
    get:
      operationId: public-http-routingSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-http-routing/search:
    post:
      operationId: public-http-routingSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsPublicHttpRoutingResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-http-routing/search/columns:
    get:
      operationId: public-http-routingSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-http-routing/search/export:
    post:
      operationId: public-http-routingSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-http-routing/search/names:
    get:
      operationId: public-http-routingSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-http-routing/suggest:
    post:
      operationId: public-http-routingSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-port-routing:
    post:
      description: Založí public port routing
      operationId: 0aa4070c-24b0-48a6-8fb6-8cb08d2ee01c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPublicPortRoutingPost'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicPortRouting'
          description: Success response
      tags:
      - PublicPublicPortRouting
  /api/rest/public/public-port-routing/{id}:
    delete:
      description: Vrátí public port routing
      operationId: d38fab1d-c326-4f49-bcd0-605b90f926c3
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeletePublicPortRouting'
          description: Success response
      tags:
      - PublicPublicPortRouting
    get:
      description: Vrátí public port routing
      operationId: 80347639-fd9e-4250-82be-54662679a90d
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicPortRouting'
          description: Success response
      tags:
      - PublicPublicPortRouting
    put:
      description: Edituje public port routing
      operationId: d4adb9cb-a8c6-486f-91df-4673a423c17d
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPublicPortRoutingPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicPortRouting'
          description: Success response
      tags:
      - PublicPublicPortRouting
  /api/rest/public/public-port-routing/{id}/restore:
    put:
      description: Obnoví public port routing
      operationId: 97409c74-fca1-4c24-9990-0af9e6da91e3
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePublicPortRouting'
          description: Success response
      tags:
      - PublicPublicPortRouting
  /api/rest/public/public-port-routing/download/{id}:
    get:
      operationId: public-port-routingSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-port-routing/search:
    post:
      operationId: public-port-routingSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsPublicPortRoutingResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-port-routing/search/columns:
    get:
      operationId: public-port-routingSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-port-routing/search/export:
    post:
      operationId: public-port-routingSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-port-routing/search/names:
    get:
      operationId: public-port-routingSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/public-port-routing/suggest:
    post:
      operationId: public-port-routingSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/region:
    get:
      operationId: d65053bb-929e-46ae-a04e-ce464b12b0bb
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRegionList'
          description: Success response
      tags:
      - PublicRegion
  /api/rest/public/region/zcli:
    get:
      operationId: d3674a0f-67ff-4f69-8afa-984e98d6dbb9
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRegionList'
          description: Success response
      tags:
      - PublicRegion
  /api/rest/public/registration:
    post:
      description: Zaregistruje uživatele a přiřadí do IS. tento endpoint má povinný
        vstup od ReCaptcha.
      operationId: 1f85b6d5-3632-4de6-ac4a-a90c22d7c46b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserRegistration'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuthLogin'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                emailExists:
                  $ref: '#/components/examples/ErroremailExists'
                passwordTooLong:
                  $ref: '#/components/examples/ErrorpasswordTooLong'
                passwordTooShort:
                  $ref: '#/components/examples/ErrorpasswordTooShort'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicRegistration
  /api/rest/public/service-stack-by-name/{projectId}/{name}:
    get:
      operationId: 1eaf557c-6cdd-45ee-a361-4d1a9dd6561d
      parameters:
      - $ref: '#/components/parameters/projectId'
      - $ref: '#/components/parameters/name'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStack'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack-type/download/{id}:
    get:
      operationId: service-stack-typeSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack-type/search:
    post:
      operationId: service-stack-typeSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsServiceStackTypeResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack-type/search/columns:
    get:
      operationId: service-stack-typeSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack-type/search/export:
    post:
      operationId: service-stack-typeSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack-type/search/names:
    get:
      operationId: service-stack-typeSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack-type/suggest:
    post:
      operationId: service-stack-typeSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack/{id}:
    delete:
      operationId: 256cd785-9b44-465b-8c2b-6ed35e5990e2
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
    get:
      operationId: d5cde09f-191d-4be1-b172-9b6d244ec381
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStack'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/autoscaling:
    put:
      description: setup service stack autoscaling parameters.
      operationId: b31ba695-b286-4ce9-87ec-713cf34429d0
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAutoscaling'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcessNil'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/backup:
    get:
      description: Lists all service stack backups.
      operationId: 9a635bb2-a6ee-4f40-82ba-5e257ff4783b
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStackBackupFileList'
          description: Success response
      tags:
      - PublicServiceStack
    post:
      description: Triggers backup of service stack
      operationId: 95e2fb44-ab74-4fd0-b3f4-873be6b84886
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStackBackup'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                backupUnsupportedStackType:
                  $ref: '#/components/examples/ErrorbackupUnsupportedStackType'
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/backup-config:
    put:
      description: Sets BACKUP_PERIOD env and triggers user data sync
      operationId: f331fac3-9f5b-4a28-9b1a-43b72d55901a
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestServiceStackBackupConfig'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                backupUnsupportedStackType:
                  $ref: '#/components/examples/ErrorbackupUnsupportedStackType'
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/backup/{date}:
    delete:
      description: Deletes specified backup of service stack
      operationId: c060ff20-79e4-4007-bc07-5d0bec892d30
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/date'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/backup/download/{date}:
    get:
      description: Downloads the specified service stack backup.
      operationId: 67415f2b-a98f-4389-8f57-5c93fba67f87
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/date'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFileDownload'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/build-cache:
    delete:
      description: deletes build cache for service stack
      operationId: f3292426-098d-45e3-ade3-6c7568742368
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcessNil'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/connect-shared-storage:
    put:
      operationId: 63e0d442-fdbe-431b-8cbb-bfd1fb5093a2
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutSharedStorageAction'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/debug:
    put:
      description: Sets service stack debug values.
      operationId: 77f64d7c-857a-478a-aa51-50b82078fa4b
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutServiceStackDebug'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStackDebug'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/disable-subdomain-access:
    put:
      description: Disable service stack subdomain access
      operationId: 3cea1fec-bd7c-4f73-b69b-68d369923314
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/disconnect-shared-storage:
    put:
      operationId: 6e7154b5-d176-4ff3-ac96-56f50bb20aab
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutSharedStorageAction'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/enable-subdomain-access:
    put:
      description: Enable service stack subdomain access
      operationId: 8b396e91-45ba-4cda-979a-af30e8642230
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/export:
    get:
      description: exports service stack configuration into yaml format
      operationId: e928d6bd-16c8-4f31-ad31-5f7c9253ed32
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectExport'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/external-repository-integration:
    put:
      operationId: 7bd9f11c-486c-40e8-963b-0f75104df6ee
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestExternalRepositoryIntegration'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcessNil'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/external-repository-integration-status:
    get:
      operationId: ce59e1d6-d166-4246-8efc-08ff8ab102cc
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseExternalRepositoryIntegration'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/file-browsing-access:
    post:
      operationId: 072ec69e-15e0-412f-8ebf-d5ed330a9248
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFileBrowsing'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/github-webhook:
    post:
      operationId: 30853ce1-9139-4dd9-bd44-5488be94eabc
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/XGitHubEvent'
      - $ref: '#/components/parameters/XHubSignature'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/gitlab-webhook:
    post:
      operationId: fcbf2a97-cce4-4714-b39e-b8ea89566349
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/XGitlabToken'
      - $ref: '#/components/parameters/XGitlabEvent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/next-app-version:
    put:
      description: decides if next deploy should use custom image
      operationId: 827c51b3-87a8-456b-9d54-dcbffa4006db
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestServiceStackNextAppVersion'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/object-storage-size:
    get:
      operationId: cf6c5223-e7fc-424b-84f0-2bbc7f3b5a56
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStackDiskGBytesUsed'
          description: Success response
      tags:
      - PublicServiceStackObjectStorage
    put:
      operationId: 909703d1-3be3-4521-be89-1ab7d2725a7c
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutServiceStackObjectStorageSize'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStackObjectStorage
  /api/rest/public/service-stack/{id}/reload:
    put:
      operationId: 93a14230-dee6-4356-89d3-a9161621c3ae
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/restart:
    put:
      operationId: 58ae895a-3b7c-4b14-8d93-053f09ec8702
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/start:
    put:
      operationId: fb0f76ec-c872-447a-bc8b-b7bd0b0607fd
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{id}/stop:
    put:
      operationId: f1539a19-dae5-4cdc-8bd0-7dd95eb82f7b
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/{serviceStackTypeVersionId}:
    post:
      operationId: 41c8ff92-f4c9-47cc-b482-6a2132bd8918
      parameters:
      - $ref: '#/components/parameters/serviceStackTypeVersionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostStandardServiceStack'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStackProcess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/download/{id}:
    get:
      operationId: service-stackSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack/import:
    post:
      description: creates service stack based on it´s yaml format configuration
      operationId: a2c84947-0180-4fc4-8032-5822b0211b9e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestServiceStackImport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProjectImport'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service-stack/object_storage_v1:
    post:
      operationId: 1aa2f18f-2de2-41ab-9d84-3b74a2a5e8df
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostObjectStorageServiceStack'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseServiceStackProcess'
          description: Success response
      tags:
      - PublicServiceStackObjectStorage
  /api/rest/public/service-stack/search:
    post:
      operationId: service-stackSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsServiceStackResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack/search/columns:
    get:
      operationId: service-stackSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack/search/export:
    post:
      operationId: service-stackSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack/search/names:
    get:
      operationId: service-stackSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack/suggest:
    post:
      operationId: service-stackSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service-stack/zerops-yaml-validation:
    post:
      description: Validates zerops.yaml in input body.
      operationId: 4c0c9753-6c80-433a-bf3a-695e8d9c8782
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestZeropsYamlValidation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicServiceStack
  /api/rest/public/service/download/{id}:
    get:
      operationId: serviceSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service/search:
    post:
      operationId: serviceSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsServiceResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service/search/columns:
    get:
      operationId: serviceSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service/search/export:
    post:
      operationId: serviceSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service/search/names:
    get:
      operationId: serviceSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/service/suggest:
    post:
      operationId: serviceSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/settings:
    get:
      description: Vrátí kolekce číselníků potřebné pro GUI v jedné souhrnné odpovědi
      operationId: 0783aee5-6ffc-42ca-885c-62a2968bcb1b
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSettings'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicSettings
  /api/rest/public/settings/country-list:
    get:
      description: Vrátí country list
      operationId: fb2b3082-bf02-49be-942c-d7785a3af38c
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSettingsCountryList'
          description: Success response
        "401":
          content:
            application/json:
              examples:
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicSettings
  /api/rest/public/settings/import-project-yml-json-schema.json:
    get:
      operationId: 74e55af9-0d39-41db-baad-04a3d89b3999
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFileDownload'
          description: Success response
      tags:
      - PublicSettings
  /api/rest/public/settings/zerops-yml-json-schema.json:
    get:
      operationId: 7675382a-8804-485f-9522-e232999765d3
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFileDownload'
          description: Success response
      tags:
      - PublicSettings
  /api/rest/public/stats-history/group-by-search:
    post:
      description: Loads resource statistics data from SQLite.
      operationId: a66e79f4-4e4f-46b6-868d-5bb416d05a40
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsStatsHistoryFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsStatsHistoryList'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/transaction-debit/cost-search:
    post:
      description: Returns summarized costs.
      operationId: bfed1546-3f28-4753-bfdb-cb61ea4431c4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsTransactionDebitCost'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsTransactionDebitCostResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/transaction-debit/group-by-search:
    post:
      description: Returns aggregated debit transactions.
      operationId: 414538e0-231f-433a-8770-8a4eab10f694
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsTransactionDebitGroupBy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsTransactionDebitGroupByResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-data:
    post:
      description: Založení nového záznamu userData
      operationId: 9b22a0fd-e452-4d8a-9a7c-81ba212a8194
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserDataPost'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                userDataNotFound:
                  $ref: '#/components/examples/ErroruserDataNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUserData
  /api/rest/public/user-data/{id}:
    delete:
      operationId: 0ffae059-c675-4872-a8c8-77bdb04f5f2d
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                badOrExpiredActivationLink:
                  $ref: '#/components/examples/ErrorbadOrExpiredActivationLink'
                userDataNotFound:
                  $ref: '#/components/examples/ErroruserDataNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                tokenExpired:
                  $ref: '#/components/examples/ErrortokenExpired'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUserData
    get:
      description: Vrátí informace o userData.
      operationId: userDataIdGet
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserData'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUserData
    put:
      operationId: c549a2ec-c49c-4e6c-a1c8-a672d729d42b
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserDataPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidClientUserGroupCombination:
                  $ref: '#/components/examples/ErrorinvalidClientUserGroupCombination'
                userDataNotFound:
                  $ref: '#/components/examples/ErroruserDataNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUserData
  /api/rest/public/user-data/download/{id}:
    get:
      operationId: user-dataSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-data/env-file:
    put:
      operationId: 3b10de77-98c0-49f0-881d-ab8cd5d45838
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserDataPutEnvFile'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProcess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidClientUserGroupCombination:
                  $ref: '#/components/examples/ErrorinvalidClientUserGroupCombination'
                userDataNotFound:
                  $ref: '#/components/examples/ErroruserDataNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUserData
  /api/rest/public/user-data/search:
    post:
      operationId: user-dataSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsUserDataResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-data/search/columns:
    get:
      operationId: user-dataSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-data/search/export:
    post:
      operationId: user-dataSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-data/search/names:
    get:
      operationId: user-dataSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-data/suggest:
    post:
      operationId: user-dataSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-notification/{id}/acknowledge:
    put:
      operationId: 3ddbe410-bd8a-4b32-9450-e5e673aeda40
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicUserNotification
  /api/rest/public/user-notification/acknowledge-all:
    put:
      operationId: a4ee73ab-ef32-41d7-8886-5f044cd2e84a
      parameters:
      - $ref: '#/components/parameters/Sync'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserNotification'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicUserNotification
  /api/rest/public/user-notification/download/{id}:
    get:
      operationId: user-notificationSearchDownload
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsDownload'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-notification/search:
    post:
      operationId: user-notificationSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsUserNotificationResponse'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-notification/search/columns:
    get:
      operationId: user-notificationSearchColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsColumns'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-notification/search/export:
    post:
      operationId: user-notificationSearchExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsExport'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-notification/search/names:
    get:
      operationId: user-notificationSearchNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsNames'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-notification/suggest:
    post:
      operationId: user-notificationSuggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEsSuggest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEsSuggest'
          description: Success response
      tags:
      - PublicEssearch
  /api/rest/public/user-token:
    post:
      operationId: d1c65c38-d742-40b6-8cf8-b6f3e06aa4ca
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserToken'
          description: Success response
      tags:
      - PublicUserToken
  /api/rest/public/user-token/{id}:
    delete:
      operationId: cc0b5946-f569-47da-b8c4-7c34d267b904
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
      tags:
      - PublicUserToken
  /api/rest/public/user/{id}:
    put:
      description: Aktualizuje údaje o uživateli v novém i starém IS.
      operationId: 404f2072-a751-4347-8b2c-262216cd3011
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidPhoneNumber:
                  $ref: '#/components/examples/ErrorinvalidPhoneNumber'
                isNotPossibleToEditAnotherUser:
                  $ref: '#/components/examples/ErrorisNotPossibleToEditAnotherUser'
                languageNotFound:
                  $ref: '#/components/examples/ErrorlanguageNotFound'
                unableToEditDeletedUser:
                  $ref: '#/components/examples/ErrorunableToEditDeletedUser'
                userAccountNotFound:
                  $ref: '#/components/examples/ErroruserAccountNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUser
  /api/rest/public/user/{id}/connect-client:
    put:
      description: Přiřadí uživatele ke klientovi.
      operationId: 0ef7af4f-acdc-4868-a674-2715d9ba5494
      parameters:
      - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestClientUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidUserRole:
                  $ref: '#/components/examples/ErrorinvalidUserRole'
                maximumNumberOfClientExceeded:
                  $ref: '#/components/examples/ErrormaximumNumberOfClientExceeded'
                userAccountNotFound:
                  $ref: '#/components/examples/ErroruserAccountNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUser
  /api/rest/public/user/authorize-client:
    put:
      description: Autorizuje požadavek na přiřazení uživatele ke klientovi
      operationId: 58f31af9-e6bd-40ec-a752-5d3661a2c70f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestClientAuthorize'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserAuthorize'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                badOrExpiredActivationLink:
                  $ref: '#/components/examples/ErrorbadOrExpiredActivationLink'
                userAccountNotFound:
                  $ref: '#/components/examples/ErroruserAccountNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                tokenExpired:
                  $ref: '#/components/examples/ErrortokenExpired'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUser
  /api/rest/public/user/info:
    get:
      description: Vrátí informace o přihlášeném uživateli.
      operationId: userInfoGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserAuthorize'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                noActiveConnectionToAnyClient:
                  $ref: '#/components/examples/ErrornoActiveConnectionToAnyClient'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                insufficientPrivileges:
                  $ref: '#/components/examples/ErrorinsufficientPrivileges'
                notAuthorized:
                  $ref: '#/components/examples/ErrornotAuthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUser
  /api/rest/public/user/password:
    put:
      description: Změní uživateli heslo v IS
      operationId: a841299c-5957-4ed1-9b54-136b1285177b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserPutPassword'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidOldPassword:
                  $ref: '#/components/examples/ErrorinvalidOldPassword'
                passwordTooLong:
                  $ref: '#/components/examples/ErrorpasswordTooLong'
                passwordTooShort:
                  $ref: '#/components/examples/ErrorpasswordTooShort'
                userNotFound:
                  $ref: '#/components/examples/ErroruserNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUser
  /api/rest/public/user/password-via-token:
    put:
      description: Změní uživateli heslo v IS
      operationId: cf667dde-7999-4a95-8074-69ab1be13dce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserPutPasswordViaToken'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuth'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                passwordTooLong:
                  $ref: '#/components/examples/ErrorpasswordTooLong'
                passwordTooShort:
                  $ref: '#/components/examples/ErrorpasswordTooShort'
                userAccountNotFound:
                  $ref: '#/components/examples/ErroruserAccountNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
        "503":
          content:
            application/json:
              examples:
                internalServerError:
                  $ref: '#/components/examples/ErrorinternalServerError'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUser
  /api/rest/public/user/recover-password:
    put:
      description: Zahájí proces změny hesla odesláním emailu
      operationId: c625f8df-e413-4e78-ab5d-9cdd6863d2b9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRecoverPassword'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
          description: Success response
        "400":
          content:
            application/json:
              examples:
                invalidClientUserGroupCombination:
                  $ref: '#/components/examples/ErrorinvalidClientUserGroupCombination'
                userAccountNotFound:
                  $ref: '#/components/examples/ErroruserAccountNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response
      tags:
      - PublicUser
tags:
- name: PublicActionLog
- name: PublicAppVersion
- name: PublicAuth
- name: PublicAvatar
- name: PublicBilling
- name: PublicChangeLog
- name: PublicClient
- name: PublicClientUser
- name: PublicEssearch
- name: PublicGithub
- name: PublicGitlab
- name: PublicPayment
- name: PublicProcess
- name: PublicProject
- name: PublicProjectEnv
- name: PublicPublicHttpRouting
- name: PublicPublicPortRouting
- name: PublicRegion
- name: PublicRegistration
- name: PublicServiceStack
- name: PublicServiceStackObjectStorage
- name: PublicSettings
- name: PublicUser
- name: PublicUserData
- name: PublicUserNotification
- name: PublicUserToken
